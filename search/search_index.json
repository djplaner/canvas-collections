{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Canvas Collections","text":"<p>Welcome to Canvas Collections. </p>"},{"location":"Limitations/limitations/","title":"Limitations","text":""},{"location":"Limitations/limitations/#limitations","title":"Limitations","text":"<p>The main limitations of Canvas Collections</p> <ol> <li>Collections is not usable on the Canvas mobile apps (teacher or student). see more</li> <li>The Collections source code must be installed and active when visitors are using a web browser in order to configure Collections and navigate using \"live\" Collections see more</li> <li>Claytons (static) Collections can be used to navigate without the Collections source code (but has to be configured with the code), but some representations will require additional CSS. see more</li> <li>Using Collections with sandbox courses may be problematic due to issues when the Collections' configuration page is deleted. see more</li> </ol>"},{"location":"Limitations/limitations/#cannot-be-used-via-canvas-mobile-apps-only-via-web-browsers","title":"Cannot be used via Canvas mobile apps, only via web browsers","text":"<p>Canvas Collections is custom JavaScript/CSS that modifies the Canvas modules web page and helps with navigation to Canvas modules (on the Canvas modules web page). The Canvas mobile apps do not use Canvas web pages and do not (at least easily) support custom JavaScript/CSS. </p>"},{"location":"Limitations/limitations/#collections-must-be-installed-and-active-for-live-collections","title":"Collections must be installed and active (for live Collections)","text":"<p>Collection provides configuration (teaching staff) and navigation (all users) functionality.</p> <p>To configure Canvas Collections you must be using a Web browser with the Collections JavaScript installed and active. </p> <p>Collections provides two navigation experiences: live Collections and Claytons Collections. Live Collections requires the Collections JavaScript to be installed and active. </p>"},{"location":"Limitations/limitations/#claytons-collections-no-code-but-some-css-may-be-required","title":"Claytons Collections - no code, but some CSS may be required","text":"<p>Navigating with Claytons Collections is essentially viewing a Canvas page with static HTML and CSS. No JavaScript is required. However, Canvas limits what HTML and CSS can be used on Canvas pages.</p> <p>Some representations fit within those limits (e.g. the HorizontalCards representation), but others do not (e.g. the GriffithCards representation). The latter will not display correctly without this HTML/CSS.</p> <p>Adding the required HTML/CSS is difficult if not impossible for mobile app users (see above). For web browsers, the relevant HTML/CSS can be installed either by the Canvas administrator, or by the teacher/designer where a tool like CIDI Labs Design Plus is available.</p>"},{"location":"Limitations/limitations/#problems-if-you-delete-and-re-create-the-collections-configuration-page","title":"Problems if you delete and re-create the Collections configuration page","text":"<p>In September, 2013 Instructure introduced changes to how page titles and URLs operate. It always remembers pages, even after they are deleted. This can cause the Collections previously deleted configuration page problem, including a potential (but not universal) solution.</p> <p>Raises issues with 'sandbox' course sites</p> <p>This problem makes sandbox course sites - where you test new course sites by deleting all content and then copying in new content - potentially problematic.</p> <p>A kludge solution would be to avoid deleting the Canvas Collections configuration page. </p>"},{"location":"about/about-collections/","title":"About Collections","text":""},{"location":"about/about-collections/#about-canvas-collections","title":"About Canvas Collections","text":""},{"location":"about/about-collections/#why","title":"Why?","text":"<p>The immediate spark for Canvas Collections arose from Griffith University's decision to migrate from Blackboard Learn to Canvas. We became aware of the long-known limitations of Canvas' modules functionality. Canvas modules represented a significant step down in both the structural and visual capabilities used by Griffith courses. </p> <p>The step down was particularly large due to the widespread adoption of the Card Interface tweak in Blackboard (e.g. image below). At last count, the Card Interface had been used by 250+ Griffith courses and had been adopted elsewhere. For more, see these reflections on the Card Interface</p> <p>A solution to Canvas' limitations was required. Canvas Collections is the result.</p> <p></p>"},{"location":"about/about-collections/#how","title":"How?","text":"<p>Wandering through the related work from the broader Canvas community it became evident that writing your own Javascript solutions was common and apparently somewhat encouraged and enabled by Canvas and Instructure. Writing your own Javascript solution is exactly what happened with the Card Interface. Time to start with Canvas.</p> <p>Work on Collections started in January 2022. Early releases were vanilla Javascript, horrendous experiences to write, and evidence of the significant learning curve. In early 2023, Collections was re-written using Svelte.</p>"},{"location":"about/about-collections/#usage","title":"Usage?","text":"<p>From the middle of 2022 Collections was being used at Griffith University. Initially, as a userscript using \"Claytons\" Collections to generate static Canvas pages. In July 2022, a version of Collections was installed in Griffith University's Canvas instance.</p>"},{"location":"about/latest-version/","title":"Latest Version 1.3","text":"<p>Version 1.3 of Canvas Collections is ready for use. It should work on any Canvas instance.</p> <p>It has been tested in both individual and institutional modes. </p>"},{"location":"about/latest-version/#which-version-are-you-using","title":"Which version are you using?","text":"<p>If Collections is installed and you have a teacher/designer role (i.e. you can see the Student View button on a Canvas course site) the Collections widget should be added to the top right of the Modules page (see the figure below). </p> <p>From version 1.3 onward, the version number should be visible (circled in red below). If you cannot see the version number, you are using an older version of Collections.</p> Canvas Collections widget with version number <p></p>"},{"location":"about/rationale/","title":"Rationale - Canvas Collections","text":""},{"location":"about/rationale/#teachers-need-custom-built-digital-tools","title":"Teachers need custom-built digital tools","text":"<p>Laurillard (2012) argues </p> <p>Teachers...need custom-built digital tools to help them with their ever more complex working environment...it could make the critical difference to changing what they are able to do with their students. (p. 222)</p> <p>Canvas Collections is a direct response to that need. It is also part of an on-going exploration into related questions.</p> <p>Why, what and how?</p> <ol> <li>Why has higher education been unable to provide the necessary \"custom-built digital tools\"? (Or even, just effective digital tools?) </li> <li>How might we do a better job at providing \"custom-built digital tools\"?</li> <li>What might/should those \"tools\" be?</li> </ol>"},{"location":"about/rationale/#usable-short-arc-design-tools-that-scale","title":"Usable short arc design tools that scale","text":"<p>Recent work on Canvas Collections has been exploring answers to those questions that focus on the value and nature of usable short arc design tools that scale, including if the design principles for Contextually Appropriate Scaffolding Assemblages (CASA) (Jones, 2019) might fruitfully inform the implementation of such tools?</p> <p>The following tabs introduce some of the relevant thinking.</p> Short arc design toolsUsable toolsScale as adaptation...Gathering &amp; weaving <p>Goodyear (2009) provides two contrasting descriptions of how teachers go about design for learning. </p> <ol> <li>Long arc design - involves a process of thinking, discussing, and searching for course re-design possibilities over a significant, extended period of time. </li> <li>Short arc design - reduces that process to a few days and relies heavily on available tools.  </li> </ol> <p>In a higher education environment where few staff have the time or the support necessary to engage in long arc design, short arc design increasingly becomes the norm. Goodyear (2009) suggests that the best way to influence the practice of short arc design is to embed good ideas in the available tools.</p> <p>The CASA idea focuses on embedding tools directly into the context into which they're used (e.g. Canvas). With an emphasis on enabling the easy adoption of good practices into short arc design.</p> <p>Brooks (1996, p. 66) identified two success criteria for usable tools:</p> <ol> <li>So easy to use that a full Professor can use it.</li> <li>So productive that a full Professor will use it.</li> </ol> <p>A well-designed CASA explicitly addresses a contextual need. Providing a reason to use it. A well-design CASA is being continually refined in response to observations of and feedback from the people using it.</p> <p>Improving the quality of learning and teaching at scale is a key issue for contemporary higher education (Ryan et al, 2021). However, there is a lack of conceptual clarity around scale which Morel and colleagues (2019) seek to address by providing a typology of scale (summarised in the following table)</p> Scale conceptualisation Description Adoption Widespread use of an innovation - market share. Limited conceptualisation of expected use. Replication Widespread implementation with fidelity that will produce expected outcomes. Adaptation Widespread use of an innovation that is modified in response to local needs. Reinvention Intentional and systematic experimentation with an innovation. Innovation as catalyst for further innovation. <p>This work adopts the position of Clark &amp; Dede (2009) that one-size-fits-all approaches don't work in education. No-one design is going to work with fidelity across settings and produce the expected outcomes. Instead, it is essential that designs - like Canvas Collections - are designed to support adaptation and reinvention. That they are generative - the capacity of a technology to generate unprompted change in varied and uncoordinated groups (Zittrain, 2006). Drawing on Resnick's (2020) metaphor), Collections aims to provide a:</p> <ul> <li>Low floor - easy to get started;</li> <li>High ceiling - enable more advanced usage, including reinvention; and,</li> <li>Wide walls - support for multiple diverse uses (adaptation)</li> </ul> <p>In exploring how to \"stretch the iron triangle\" we've drawn on Fawn's (2022) notion of entangled pedagogy. That the task of designing and delivering learning requires gathering and weaving together multiple tangled threads of knowledge into contextually appropriate assemblages. Hence, one approach to maximising the quality, accessibility, and cost efficiency of that task will require the effective use of digital technology to automate and augment this gathering and weaving.</p> <p>The CASA design principles informing the design of Collections aim to enable this. e.g. Collections is designed to enable new representations to be developed and for a collection's representation to be changed as needed.</p>"},{"location":"about/rationale/#references","title":"References","text":"<p>Brooks, F. (1996). The Computer Scientist as Toolsmith II. Communications of the ACM, 39(3), 61--68.</p> <p>Clarke, J., &amp; Dede, C. (2009). Design for Scalability: A Case Study of the River City Curriculum. Journal of Science Education and Technology, 18(4), 353--365. https://doi.org/10.1007/s10956-009-9156-4</p> <p>Fawns, T. (2022). An Entangled Pedagogy: Looking Beyond the Pedagogy---Technology Dichotomy. Postdigital Science and Education, 4(3), 711--728. https://doi.org/10.1007/s42438-022-00302-7</p> <p>Laurillard, D. (2012). Teaching as a Design Science: Building Pedagogical Patterns for Learning and Technology. Routledge.</p> <p>Goodyear, P. (2009). Teaching, technology and educational design: The architecture of productive learning environments (pp. 1--37). https://ltr.edu.au/resources/Goodyear%2C%20P%20ALTC%20Fellowship%20report%202010.pdf</p> <p>Jones, D. (2019). Exploring knowledge reuse in design for digital learning: Tweaks, H5P, CASA and constructive templates. In Y. W. Chew, K. M. Chan, &amp; A. Alphonso (Eds.), Personalised Learning. Diverse Goals. One Heart. ASCILITE 2019 (pp. 139--148). https://djon.es/blog/2019/08/08/exploring-knowledge-reuse-in-design-for-digital-learning-tweaks-h5p-constructive-templates-and-casa/</p> <p>Morel, R. P., Coburn, C., Catterson, A. K., &amp; Higgs, J. (2019). The Multiple Meanings of Scale: Implications for Researchers and Practitioners. Educational Researcher, 48(6), 369--377. https://doi.org/10.3102/0013189X19860531</p> <p>Ryan, T., French, S., &amp; Kennedy, G. (2021). Beyond the Iron Triangle: Improving the quality of teaching and learning at scale. Studies in Higher Education, 46(7), 1383--1394. https://doi.org/10.1080/03075079.2019.1679763</p> <p>Zittrain, J. L. (2006). The Generative Internet. Harvard Law Review, 119(7), 1974--2040.</p>"},{"location":"about/related-work/","title":"Related work","text":"<p>Canvas Collections seeks to address long-term limitations in Canvas. Limitations to which others have responded. Below is a small sample organised broadly along the features of Canvas Collections. The following table summarises the work. Click on the links to see more.</p> Features Description Collections Group or filter a Canvas modules Representations Modify the visual appearance of Canvas modules Objects Add additional information about modules Navigation Improve navigation within the contents of Canvas modules Other Canvas work Other related work from within the Canvas community Earlier work Earlier work from outside the Canvas community"},{"location":"about/related-work/#collections","title":"Collections","text":""},{"location":"about/related-work/#module-compactor","title":"Module compactor","text":"<p>The Module Organiser (aka Compactor) is a Chrome extension that offers various capabilities to better organise Canvas module. Some of these capabilities are similar to those offered by Canvas Collections, including:</p> <ul> <li>Organising modules by Tabs (v0.9 of the Organiser) is similar to collections.</li> <li>Tagging modules is one way of adding more (meta-)data to a module. </li> </ul>"},{"location":"about/related-work/#filter-modules","title":"Filter modules","text":"<p>Module filters - blog post - JS (from another instructure employee) to filter items on Modules page. Has some discussion about adding this type of functionality. github. Doesn't appear to worry/handle dynamic loading of Module content</p>"},{"location":"about/related-work/#representations","title":"Representations","text":"<p>Work to modify the visual appearance of modules can be said to come in two flavours:</p> <ul> <li>supported - software helps improve the representation.</li> <li>manual - a person has to do the work.</li> </ul>"},{"location":"about/related-work/#supported","title":"Supported","text":"<p>Cards or tiles</p> <ul> <li>A dashboard view of Modules in Canvas v2 - github</li> <li> <p>Canvas where am i</p> <p>Does a range of different and neat tweaks - tiles have a drop down box with details of each item (and perhaps a direct link) - adds module/item information to the left hand menu - adds progress icons to the previous/next</p> </li> </ul> <p>Other modifications</p> <ul> <li>Collapse all modules thread on instructure community around some code shared by an Instructure employee that helps manage collapse all modules<ul> <li>Canvas Modules Compactor - YouTube video showing a browser extension for collapsing individual modules based on indentation</li> </ul> </li> <li>Quick Module Navigation - JS to enable click on button (on home page) to go directly to appropriate module with other modules collapsed</li> </ul>"},{"location":"about/related-work/#manual","title":"Manual","text":"<p>This typically involves hand-crafting HTML and CSS - whilst working within the constraints of the Canvas Rich Content Editor (RCE) - in a Canvas page.</p> <ul> <li>Create full navigation using pages </li> <li>Creating an inviting course home page</li> <li> <p>Home sweet home pages without tables</p> </li> <li> <p>Creating a page of cards - College specific example of using CSS to enable staff to manually create a card interface</p> </li> <li> <p>Create Interactive Cards - similar approach but requires the ability to add external CSS to Canvas</p> <p>The Canvas RCE allows some CSS to be added, but (almost apparently) randomly deletes parts. This work suggests using your institution's Canvas theme editor. Another option, may be Cidi Labs Design Plus which supports adding custom CSS to a page.</p> </li> </ul>"},{"location":"about/related-work/#objects-and-meta-data","title":"Objects and meta-data","text":"<p>Not currently aware of anything that does this.</p>"},{"location":"about/related-work/#module-navigation","title":"Module Navigation","text":"<ul> <li> <p>Towards a Modules navigation menu in Instructure Canvas - github</p> <p>Creates a right-hand menu to support navigation within Modules</p> </li> </ul>"},{"location":"about/related-work/#other-canvas-work","title":"Other Canvas Work","text":"<ul> <li> <p>Canvas unpublish hack</p> <p>Small blog post outlining a bit of JS to solve an issue with Canvas. Useful as an example of promises etc.</p> </li> <li> <p>Module Ids with JS</p> <p>Canvas community post that includes small JS code example using promises etc.</p> </li> </ul>"},{"location":"about/related-work/#earlier-work","title":"Earlier Work","text":"<ul> <li>Card Interface - direct inspiration for Collections. Javascript that modifies Blackboard Learn pages to add a card interface.</li> <li>Blackboard Tweaks - in turn the inspiration for the Card Interface. Earlier work using Javascript to improve Blackboard Lean.</li> </ul>"},{"location":"about/related-work/#academic-literature","title":"Academic Literature","text":"<p>Jones, D. (2019). Exploring knowledge reuse in design for digital learning: Tweaks, H5P, CASA and constructive templates. In Y. W. Chew, K. M. Chan, &amp; A. Alphonso (Eds.), Personalised Learning. Diverse Goals. One Heart. ASCILITE 2019 (pp. 139\u2013148).</p>"},{"location":"community/collections-community/","title":"Collections Community","text":""},{"location":"community/collections-community/#building-on-the-shoulders-of-giants","title":"Building on the shoulders of giants","text":"<p>Collections has only been possible due to the Canvas, Griffith University, and broader open source communities. They've provided the motivation, support, related work, knowledge, and tools that made Collections possible. </p> <p>\ud83d\ude4f Thank you.</p>"},{"location":"community/collections-community/#getting-involved","title":"Getting involved?","text":"<p>Collections is new. Participation is welcome.</p> <p>How can contribute to Collections?</p> <ol> <li>Using Collections? - Share your experience, report bugs, and ask for new features.</li> <li>Modifying Collections? - Learn how to get started with Collections development and, please, contribute your work back.</li> </ol> Using Collections?Modifying Collections? Contribution How to Ask a question Join the discussions area Report a bug Create a bug report Ask for a new features Create a feature request Share you experience If you've used Collections, please do share your experience in the discussions area <p>Collections is open source. Licence update coming soon. It is explicitly designed to be easy to be modified to suit your context and requirements. It's hosted on GitHub, feel free to fork it and make changes. If you do, please consider contributing them back to the project.</p> <p>Getting started with Collections development</p> <p>The Collections readme provides some very basic information on how to get started with Collections development. More to come, hopefully.</p> <p>If you've questions, please use the discussions area of reach out to the Collections maintainer directly. </p> <p>Possible modifications</p> Possibility Description Write a new representation <p>Representations are the most visual aspect of Collections. They are designed as stand alone Svelte components. Meaning it is fairly easy to create new representations to suit your needs.</p> Improve an existing representation <p>e.g. modify the Cards representation to include a drop-down of module items on the card.</p> Improve date handling <p>Currently date handling is very specific to Griffith. It needs further abstraction to more easily support other institutions and their calendars.</p><p>There's also an argument to be made for adding a standard calendar entry method.</p> Fix bugs <p>There will be bugs. Please, find them, report them, and if possible fix them.</p> Write tests <p>Collections is currently without a testing framework. This needs to change.</p>"},{"location":"configure/before-and-after/","title":"New course: before and after","text":"<p>What does a Canvas course site look like before and after Collections is configured?</p> BeforeAfter <p>This Canvas course (see animated GIF below) currently has 14 modules (1 is unpublished). </p> <p>The course is designed to help people answer the why, what and how questions about Canvas Collections. All (but one) of the modules provide answers to one of those three questions. </p> <p>The final Questions &amp; Suggestions module contains a Canvas page containing an embedded padlet. The aim being to generate lots of discussion about Canvas Collections.</p> <p>Does the vanilla Canvas modules view help you understand the course design?</p> <p> Example course before Collections has been configured <p>After Collections is configured, the 13 modules are organised into three questions matching the course design's three driving questions (Why? What? How?). In addition, the importance of the Questions &amp; Suggestions padlet has been increased by making it a first level member of the navigation bar.</p> <p>An includePage has been used to add an explanation about the purpose of the site.</p> <p>For illustrative purposes, in the image below the What? collection is using the AssessmentTable representation</p> <p>Which helps you better understand and navigate the course? Vanilla Canvas, or Canvas + Collections?</p> <p> Example course after Collections has been configured"},{"location":"configure/configure-collections/","title":"2. Configure the collections for a course","text":"<p>Having answered these three design questions you're ready to start configuring Collections. The first step is to create and configure the collections for your course.</p>"},{"location":"configure/configure-collections/#four-steps-to-configure-collections","title":"Four steps to configure collections","text":"<p>The process illustrated below can be summarised as follows.</p> Step Description 1. Turn on Collections <p>Initially, Collections is turned off for a course. The first time you start using Collections on a course you must turn it on</p> 2. Turn on editing <p>Once Collections is turned on you will be able to see Collections navigation interface elements. Before any configuration takes place, this is likely to be quite bare.</p> <p>Before you can make any changes you must turn Edit on. At any one time, only one person in one browser window can be editing Collections for a given course. </p> 3. Add a new collection <p>With Edit on you can start adding new collection(s) by providing a collection name and choosing an initial representation.</p> 4. Check the collection <p>Optionally, once created you can check that it has been created.</p>"},{"location":"configure/configure-collections/#1-turn-on-collections","title":"1. Turn on collections","text":"<p>On the Modules page, if Collections is installed, you will see the Collections element. If Collections has not been previously turned on for the course, you will see a switch. Click that switch to turn Collections on.</p> Turning Collections on <p>"},{"location":"configure/configure-collections/#2-turn-on-editing","title":"2.  Turn on editing","text":"<p>At any one time, only one person can edit Collections for a course. Before you can make changes - like adding a new collection - you must turn Edit on</p> <p>Students can't see an unpublished Collections</p> <p>The newly created Collections configuration (just a normal Canvas page) will be unpublished. This means students will not be able to use live Collections.  You need to publish it before they can.</p> <p>Collections inline help provides more detail (see the animated image below for more)</p> Turn on editing <p>"},{"location":"configure/configure-collections/#3-add-a-collection","title":"3. Add a collection","text":"<p>With Edit on you can start adding new collection(s) by providing a collection name and choosing an initial representation.</p> Add a collection <p>"},{"location":"configure/configure-collections/#4-check-the-collection-and-goto-3","title":"4. Check the collection (and goto 3)","text":"<p>Once created you can check what's been created and/or you can continue to add more collections.</p> Check and add all collections <p>"},{"location":"configure/configure-modules/","title":"3. Configure the modules","text":"<p>Now that you have created and configured some collections to your course  the next steps are</p> <ol> <li>Allocate modules their collections?</li> <li>Provide additional data about the modules?</li> </ol> <p>Canvas Collections provides a Module configuration area for each module. This is how you configure how individual modules work with Collections.</p> <p>For more on module configuration</p> <p>See the reference page on the module configuration area.</p>"},{"location":"configure/configure-modules/#three-steps-to-configure-modules","title":"Three steps to configure modules","text":"<p>There are three typical steps in using the Module configuration area. These are illustrated below.</p> Step Description 1. Find the module configuration area <p>Where do you find it? What can it do?</p> 2. Allocate a module to a collection <p>How to modify a module so it belongs (is allocated) to a particular collection.</p> 3. Add more metadata to a module <p>Start transforming a vanilla Canvas module into a design specific object by adding a description, label, banner and other metadata.</p>"},{"location":"configure/configure-modules/#1-find-the-module-configuration-element","title":"1. Find the module configuration element","text":"<p>Collections will add to each Canvas module (just under the module title) a module configuration element. This is how you configure each module. </p> <p>The following animated image illustrates how to find it and what it looks like. The following steps will show more, but there's more information in Collections 101 and the Reference area</p> Finding the module configuration areas <p></p>"},{"location":"configure/configure-modules/#2-allocate-the-module-to-a-collection","title":"2. Allocate the module to a collection","text":"<p>Use the Collections drop down in the General tab of a module configuration area to allocate a module to a collection. If you allocate a module to a collections that isn't currently be displayed, the module will disappear once allocated. It will be visible under its new collection. You can change a module's allocated collection at any time.</p> Allocating modules to another collection <p></p>"},{"location":"configure/configure-modules/#3-add-more-metadata-to-a-module","title":"3. Add more metadata to a module","text":"<p>Initially, how Collections represents a module will be quite \"bare\" due to the absence of metadata. As you add more metadata, the representation will be updated. Representing the transformation from a vanilla module to an object.</p> <p>How metadata is displayed depends on the representation</p> <p>Different representations can use the same metadata in different ways.</p> <p>For example, Collections Only representation ignores it. Some metadata is designed specifically for the Cards representation.</p> <p>The following animated image illustrates some examples of this transformation. The Objects section in Reference provides more detail on the metadata you can add and its effect on the representation. </p> Adding metadata to modules <p></p>"},{"location":"configure/configure-representations/","title":"4. Configure Representations","text":"<p>When your first configured the course's collections you will have chosen an initial representation.  Representations can be changed at any time using the collections configuration element as shown below.</p> Changing representations <p>"},{"location":"configure/design/","title":"1. Designing for Canvas Collections","text":"<p>Canvas Collections provides the ability to add structure and context to the Canvas modules page. A way to improve the information architecture of your course. </p> <p>The following offers three questions very specific to Canvas Collections that may help identify/translate your course's design intent.</p>"},{"location":"configure/design/#three-questions","title":"Three questions","text":"<p>The first two questions are the crux. They focus on establishing the conceptual model/information architecture for Collections. Changes to these answers can be made after configuration, but might be somewhat involved.  Arguably, the first question is the main one to answer. The second can be answered later.</p> <p>The third question is more practical and Collections enables you to change easily.</p> <p>The following explains the answers to these questions for the example course. There are quite diverse and detailed methods for answering these questions. Covering those is beyond the scope here.</p> <p>Think about your course</p> <p>As you read, think about your course, your context, your design intent, and the outcomes you wish to achieve. How might you answer these questions?</p>"},{"location":"configure/design/#1-what-collections","title":"1. What collections?","text":"<p>What's a good way to group your course's modules?</p> <p>A good answer would be driven by your design intent and context.</p> <p>The example course is intended to be self-paced, entirely online course focused on helping people understand and use Canvas Collections. Hence early on in the design three driving questions were identified:</p> <ol> <li>Why use Canvas Collections?</li> <li>What is Canvas Collections?</li> <li>How to use Canvas Collections?</li> </ol> <p>Each of the modules of the course were designed to address aspects of these three questions. Hence it becomes obvious that one collection per question would make sense. It was decided that three collections Why? and What? and How? would be used. This was the initial design of the course.</p> <p>Since Collections is both a work in progress, but is also focused on generative the ability for people to easily ask questions and make suggestions was deemed core.  Hence, a much later decision, was made to add a fourth collection: Questions &amp; Suggestions. The aim being to make this feature of first order importance to the course design and to \"students\".</p> <p>A part of the sanity check for this set of three/four collections is to map the modules against these collections. To see if all modules fit sensibly into a collection and that no-one collection is too large or too small. Since these three questions underpinned the original design of the modules, happily, this was the case.</p> Collection Modules Why? <ul><li>Improve Canvas' organisation of course content</li> <li> Provide \"card interface\" functionality in Canvas. </li> <li> Platform for generative development.</li> </ul> What? <ul> <li> What is Canvas Collections? </li> <li> What is the student experience? </li> <li> What is the teacher experience?</li> <li> What functionality is provided? </li> </ul> How? <ul> <li>How does Canvas Collections work? </li> <li> How do you install Canvas Collections? </li> <li> How do you configure Canvas Collections? </li> <li> How do you design a Blackboard course migration? </li> </ul> Questions &amp; Suggestions <p>This collection ended up without any modules. The aim was to provide direct access to a padlet. This was achieved by using the include page feature of Collections. </p> <p>Basic configuration ready at this point</p> <p>If you're able to prepare a table something like the above, you're ready to start configuring collections.</p> <p>Another approach - \"object\" categories</p> <p>Not all courses will have a core set of driving questions and a context in which it makes sense to use the questions as collections. This is in part due to this course not being a \"typical\" university course.</p> <p>A more common approach with a \"typical\" university courses is the \"object\" category. Most courses can be said to consist of three common \"objects\" which students will engage with, for example: </p> <ul> <li>weekly content - the lectures, tutorials, activities and resources that form the primary learning experiences.</li> <li>assessment - the more formal formative and summative assessment items that evaluate the quality of student learning.</li> <li>teaching staff and other supports - the people and services providing support to the learning experience.</li> </ul>"},{"location":"configure/design/#2-what-objectsactivities","title":"2. \"What objects/activities?\"","text":"<p>Question</p> <p>What \"objects/activities\" do the Canvas modules represent? What extra information do you want to store and display about these objects/activities?</p> <p>Canvas modules are a vanilla Canvas object. Canvas only displays standard module information (name, list of items, published or not, progress etc) about modules. In your course, each module will typically represent more design/context specific objects (lecture, assessment item etc).  To make obvious the type of object, you want to be able to associate and display more specific information.</p> <p>As a fairly simple course focused more on self-paced information access and not connected to a formal course the modules in the example course aren't representative of something formal like a week, lecture, tutorial, theme.</p> <p>Collections provides methods to add extra information about modules. The question here is what type of information is necessary for your course. The answer to this question will be driven by your design intent and context.</p> <p>For example, the figure below is an annotated screenshot of the first three \"objects\" in the Why? collection from the example course. The following table provides a description of the information displayed.</p> Label Description Banner (Image|Video|Colour) <p>The card representation includes a banner space in each card. That space can be filled by an image, colour or iframe (embed videos etc). The purpose is to largely provide a visual cue to the specific object.</p> Date <p>Provide students with some idea of when a resource is available or should be engaged with, or some other purpose depending on the type of object.</p> FYI text <p>For Your Information (FYI) cards are designed to provide information only. Unlike other cards, there is no link from the card to a module. The common use for this is when a module will be available, but is not yet available. It helps make students aware that something is coming. </p> Description <p>A short, but more detailed description of the object. Perhaps focused on how, why, when a student should engage with the object.</p> Annotated screenshot of the first three \"objects\" in the _Why?_ collection from the example course. <p></p>"},{"location":"configure/design/#3-what-representations","title":"3. \"What representation(s)?\"","text":"<p>What representation(s) do you want to use for the objects/activities?</p> <p>Collections provides a growing list of representations for collections. Representations </p> <ul> <li>provide an alternative visualisation to a collection's list of modules;</li> <li>can be quickly changed at any time without losing any information; and,</li> <li>may make use of different types of object meta data.</li> </ul> <p>Which representation is best will depend on your design intent and context. The following animated image demonstrates the process of changing a collection's representation between three different representations, including: Assessment Table, Griffith Cards, and Collections Only.</p> Example changing a collection's representation <p>"},{"location":"configure/overview/","title":"Configure Collections","text":"<p>Once Collections is installed (and you have a teacher/designer role) you will be able to configure Collections for your course.  The following offers one process for configuring Collections.</p>"},{"location":"configure/overview/#before-and-after-configuration","title":"Before and after configuration","text":"<p>It can be useful to start by understanding what a Canvas course site will look like before and after Collections is configured. </p>"},{"location":"configure/overview/#suggested-configuration-process","title":"Suggested configuration process","text":"Step Description 1. Design How best to use Collections for your course. 2. Configure collections Create and configure the collections required by your course. 3. Configure objects Identify the objects that make up the collections and identify the additional (meta-)data for each module to transform them into the identified objects. 4. Configure representations Choose the representations best suited to your course's collections."},{"location":"configure/overview/#set-up-claytons","title":"Set up 'Claytons'","text":"<p>Once Collections is configured, you may also wish to set up 'Claytons'.</p>"},{"location":"configure/set-up-claytons/","title":"Configure \"Claytons\" (static) Collections","text":"<p>How do you improve navigation when you can't use live Collections?</p> <p>By default, Collections only works if Collections is installed. For students, this should be done institutionally. This is not always possible.</p> <p>If your students can't use live Collections, you can use Claytons Collections. This is where a teacher/designer uses live Collections to modify a Canvas page with an interface like Collections. A page that is visible without Collections.</p> <p>With Collections already configured setting up Claytons Collections is a four step process.</p>"},{"location":"configure/set-up-claytons/#four-steps-to-configuring-claytons","title":"Four steps to configuring Claytons","text":"Step Description 1. How many collections? <p>You can include some or all of your course's collections in Claytons.</p> 2. What Canvas pages? <p>Claytons Collections writes representations of one or more collections to one or more pages. You can have multiple collections on one page, one collection on multiple pages, or some combination</p> 3. Configure Claytons <p>Use the Collections configuration element to specify which collections go to which Canvas pages. </p> 4. Generate Claytons <p>Update the chosen pages with the current representation of the chosen collections.</p><p>Important see the note below about repeating this step. 5. Add external CSS <p>The Canvas Editor supports a limited collection of HTML/css. It will remove anything else. </p><p> For best effect, some representations require additional CSS to be available externally.</p> <p>Repeat step 4 every time you make a change to Collections</p> <p>Claytons produces a static, one-off representation of Collections' configuration. You can make changes to that configuration using live Collections. But you will need to repeat step #4 to update the static representation.</p>"},{"location":"configure/set-up-claytons/#example-of-configuring-claytons","title":"Example of configuring Claytons","text":"<p>These tabs demonstrate one example of stepping through the four steps from the table above. </p>"},{"location":"configure/set-up-claytons/#collections-versus-claytons","title":"Collections versus Claytons","text":"<p>The following steps convert a (live or normal) Collections configuration into a Claytons Collections. The two tabs below allow you to compare the live Collections with the final Claytons Collections.</p> Live CollectionsClaytons Collection <p> Live Collections to be emulated with Claytons </p> <p> Live Collections to be emulated with Claytons </p>"},{"location":"configure/set-up-claytons/#1-how-many-collections","title":"1. How many collections?","text":"<p>For the example course used here, the aim is produce a new home page that fully emulates live Collections.</p> <p>As shown in the image below, the example course has four collections. We want to use all four: Why?, What?, How?, and Questions &amp; Suggestions.</p> The four collections for this live Collections <p></p>"},{"location":"configure/set-up-claytons/#2-what-canvas-pages","title":"2. What Canvas pages?","text":"<p>To emulate live Collections, we need to place all the collections into a single page. The aim being is that this page will become the new home page for the course.</p> <p>Hence, the new Claytons Canvas page will be called New Home Page. A page that doesn't exist yet in the course.</p>"},{"location":"configure/set-up-claytons/#3-configure-claytons","title":"3. Configure Claytons","text":"<p>The main configuration required is to specify the output page for each collection. The output page is the name of the Canvas page to which the collection's representation will be written.</p> <p>In this example, since we want each collection to be represented in Claytons Collections, the name of an output page (New Home Page) is provided for each collection. Only add output pages for the collections you wish to include in the Claytons version.</p> <p>You can use different pages for different Claytons</p> <p>In this example, Claytons Collections has all collections going to the same page. It is possible to use different pages for different collections.</p> Configure Claytons by specifying the output page for Collections <p>"},{"location":"configure/set-up-claytons/#4-generate-claytons","title":"4. Generate Claytons","text":"<p>With everything configured, the final step is to generate the Claytons pages. This is done using the Full \"Claytons\" section of the collections configuration element. The main task is to choose the Navigation Bar Option most appropriate.</p> <p>For the example, the aim is to emulate live Collections. Making Tabs the best navigation bar option.</p> <p>Once the option is chosen, Collections will create the page (if necessary) and update its content with static HTML.</p> Generate Claytons <p>"},{"location":"configure/set-up-claytons/#5-add-external-css","title":"5. Add external CSS","text":"<p>Given the limitations of the Canvas RCE, for best effect, some representations require additional CSS to be available externally. The following table summarise.</p> <p>There are two known ways to add these additional CSS files:</p> <ol> <li>Your Canvas administrator could add the CSS via the Canvas Theme Editor.</li> <li>If you're institution has installed CIDI Labs DesignPLUS, it can be used to add the CSS at the course level.</li> </ol> Representation External CSS file GriffithCards griffith-cards-claytons.css"},{"location":"dev/design/design_v1/","title":"Design of \"v1\" canvas-collections","text":""},{"location":"dev/design/design_v1/#aims","title":"Aims","text":"<ul> <li>Improve structure of the code<ul> <li>better MVC structure</li> <li>controller factory to distinguish edit/view and also different representations</li> <li>clear promise driven models for configuration file reading/writing </li> <li>move to API based module information (replacing scraping)</li> <li>test coverage</li> <li>remove the lib folder??</li> </ul> </li> <li>Improve the build process<ul> <li>clearer path for userscript dev, userscript live, and javascript CDN versions</li> </ul> </li> <li>Add support for<ul> <li>configuration from JSON file in course \"files\" area</li> <li>multiple represenations of collections (for students)</li> <li>integrated collection editing interface<ul> <li>turn collections on/off</li> <li>configure collections<ul> <li>list of available collections</li> <li>change order</li> <li>rename collections</li> <li>indicate which collections are visible</li> <li>choose how collection navigation representation</li> <li>select collection representation</li> </ul> </li> <li>configure module collection information<ul> <li>which collection a module belongs to</li> <li>dates - including using Canvas module dates</li> <li>labels and label numbering</li> <li>image iframe active image</li> </ul> </li> </ul> </li> </ul> </li> <li>Improve representations<ul> <li>cards<ul> <li>accessibility</li> <li>move away from tailwind??</li> <li>component?</li> <li>Canvas specific stuff<ul> <li>unpublished</li> <li>progress</li> <li>including module item drop downs</li> </ul> </li> </ul> </li> <li>table<ul> <li>how to specify columns and link to module items</li> </ul> </li> <li>collection navigation </li> </ul> </li> </ul>"},{"location":"dev/design/design_v1/#repo-structure","title":"Repo structure","text":"<ul> <li>dev</li> <li>release</li> <li>src     controller factory at this level<ul> <li>initialise</li> <li>edit</li> <li>collection-view</li> <li>module-view<ul> <li>cards</li> <li>table</li> <li>... </li> </ul> </li> </ul> </li> </ul>"},{"location":"dev/design/design_v1/#states","title":"States","text":"<p>In each state there may be input elements, these will need to have event handlers that connect back to the controller and/or views (controller probably). </p> <ol> <li>Configuration<ul> <li>edit only view </li> <li>shows the capability for canvas-collections to be turned on </li> <li>but not currently turned on</li> <li>may already be configured - show that</li> <li>probably a drop box of some description at the same level of student view button</li> </ul> </li> <li>Edit<ul> <li>collections turned on and in edit view on the modules page</li> <li>Modify \"canvas-collection\" display at top to have a drop down that allows configuration of collections</li> <li>Perhaps depending on configuration, show the collections representation at the top</li> <li>Modify the canvas module representations to include edit capabilities (mostly a drop down on module title)</li> <li>???</li> </ul> </li> <li>View<ul> <li>collections turn on but in student view</li> <li>shows configured collection navigation</li> <li>shows configured collection module information</li> <li>modifies the canvas module information</li> <li>What it displays is based on the selective representation for navigation and module information</li> </ul> </li> </ol>"},{"location":"dev/design/design_v1/#code-structure","title":"Code structure","text":"<ul> <li>remove lib folder</li> <li>move canvasCollections function operation into cc_Controller<ul> <li>factory class, figures out which controller from which state to call</li> <li>Need to check for cc configuration file ASYNC api call. Can probably do away with the waiting and by event driven</li> <li>parse the available configuration file</li> <li>combine URL and configuration file information to calculate which state to enter (and thus which controller)</li> <li>create that controller and call it</li> </ul> </li> <li>create sub-folders for the various states</li> </ul>"},{"location":"development/local-development/","title":"Local development of Canvas Collections","text":"Under construction <p>This page is under construction. Basic idea here, but little useful detail</p>"},{"location":"development/local-development/#pre-requisites","title":"Pre-requisites","text":"<ol> <li>Git</li> <li>npm</li> <li>editor</li> <li>Chrome</li> <li>Tampermonkey</li> </ol>"},{"location":"development/local-development/#set-up","title":"Set up","text":"<ol> <li>Clone the Canvas Collections repository</li> <li>Install dependencies via npm</li> <li>Modify the <code>@require</code> in <code>dist/canvas-collections.dev.user.js</code> to point to your repo's file structure</li> </ol>"},{"location":"development/local-development/#custom-tweaks","title":"Custom tweaks","text":"<p>Implement this modification on the <code>cl-editor</code> package to ensure changes in the HTML view of the editor are not lost due to Canvas' use of senty.io</p>"},{"location":"development/local-development/#development","title":"Development","text":"<p><code>npm run build</code> to enter live re-build in <code>dev/</code></p>"},{"location":"development/local-development/#production","title":"Production","text":"<p><code>npm run build</code> to build production version in <code>dist/</code></p>"},{"location":"development/life-cycle/life-cycle/","title":"Life cycle","text":""},{"location":"development/life-cycle/life-cycle/#canvas-collections-life-cycle","title":"Canvas Collections Life Cycle","text":"<p>A nascent attempt at documenting the life cycle for Canvas Collections.</p>"},{"location":"development/life-cycle/life-cycle/#1-maints-does-the-set-up","title":"1. main.ts does the set up","text":"<ul> <li><code>CanvasSetup::checkContext</code> extracts some details about what should be the Canvas course into a <code>context</code> object</li> <li>If on a Canvas course site's module page it attempts to insert the canvas-collections component in the appropriate place passing the <code>context</code> object as properties</li> <li>Also sets up an event listener to destroy the canvas-collections component if the page is being unloaded</li> </ul>"},{"location":"development/life-cycle/life-cycle/#2-canvas-collections-component-starts-up","title":"2. Canvas Collections component starts up","text":"<ul> <li>a bunch config variables and imports done</li> <li>configStore gets initialised with context variables passed from main.ts</li> <li>Attempts to load collections (configuation) and Canvas (modules) details via two classes</li> <li>CollectionsDetails<ul> <li>Attempts to load the <code>Collections Configuration</code> page</li> <li>Will create an empty one if there isn't one</li> </ul> </li> <li>CanvasDetails</li> </ul>"},{"location":"development/life-cycle/life-cycle/#creation-of-collections-configuration-page","title":"Creation of Collections Configuration page","text":"<p>All the data generated by Collections is stored in a Canvas page named <code>Canvas Collections Configuration</code> the lifecycle for this page is as follows.  Implemented by a combination of <code>CanvasCollections.svelte</code> and <code>CollectionsDetails.svelte</code></p> <ol> <li>(on start up) does config page exist?</li> <li>Read the config page</li> </ol>"},{"location":"getting-started/how-to-start/","title":"How to start?","text":"<p>Three steps to get started.  </p> <p>The first two focus on building your understanding of Canvas modules and Canvas Collections.  Understanding the conceptual model of any tool will help you use it effectively and efficiently. </p> <p>You may wish to go directly to installing Collections.</p>"},{"location":"getting-started/how-to-start/#1-learn-more-about-canvas-modules","title":"1. Learn more about Canvas Modules","text":"<p>Collections builds on the functionality provided by Canvas modules. Having a good understanding of Canvas Modules is a good foundation for understanding Canvas Collections.</p>"},{"location":"getting-started/how-to-start/#2-learn-more-about-collections","title":"2. Learn more about Collections","text":"<p>Work through the Collections 101 resources to get a slight more detailed introduction to Canvas Collections.</p>"},{"location":"getting-started/how-to-start/#3-install-collections","title":"3. Install Collections","text":"<p>Canvas Collections is combination of JavaScript and CSS that modifies the Canvas modules page. It needs to be installed.</p> <ol> <li>Find out if Collections is already installed.</li> <li>Learn how to install it.</li> </ol>"},{"location":"getting-started/101/concepts/","title":"Concepts - Canvas Collections","text":"<p>Adapted from the Collections landing page the following descriptions and videos provide an overview of the primary concepts that make up Canvas Collections and video examples of what they look like as you interact with Canvas with Collections installed.</p>"},{"location":"getting-started/101/concepts/#collections","title":"collections","text":"<p>The difference between Collections and collections</p> <p>The use of upper or lower case C distinguishes between two different concepts:</p> <ol> <li>Collections - refers to Canvas Collections, the entire tool.</li> <li>collections - you use the tool (Collections) to create collections and allocate different Canvas modules to belong to different collections.</li> </ol> <p>Canvas Collections allows you to define different collections of Canvas modules. Providing a way to add structure to Canvas modules, moving beyond the one linear, vertical list of modules.</p> <p>In the video below, the 12 modules for a Canvas course (designed to introduce Canvas Collections) are grouped into four specific collections summarised in the table.  </p> <p>The collection's names - Why?, What?, How?, and Questions &amp; Suggestions - are designed to help students navigate between collections.  </p> <p>Within the Canvas community, this is a long requested feature (a 2016 request).  </p> collection name Description Why? Three modules answering the question why use Collections? What? Four modules (one unpublished) addressing the question what is Canvas Collections? How? Five modules (one unpublished) answering the question how to use Collections? Questions &amp; Suggestions No modules, but a padlet is available as a space to ask questions and mark suggestions about Collections. The padlet is embedded in a Canvas page for this course. It has been nominated as this collection's include page, i.e. its content is displayed as part of the collection. <p>See the collections reference page for more.</p>"},{"location":"getting-started/101/concepts/#representations","title":"Representations","text":"<p>For each collection, you can select from one of a number of different representations. Each representation adds a different visual design to the modules. Moving Modules beyond a sequence of Windows 95 folders. </p> <p>The representation for a collection can be changed at any time by selecting another of the available representations. Currently, there are four representations. New representations can be added.</p> <p>See the representations reference page for more.</p>"},{"location":"getting-started/101/concepts/#context-objects-through-metadata","title":"Context (objects through metadata)","text":"<p>For each module, you can provide additional (meta-)data about the module, including a description, date (range), label, banner image etc. This allows you to add more context to the Canvas modules page. Transforming a vanilla Canvas module into a design and context specific object.  </p> <p>See the Objects reference page for more.</p>"},{"location":"getting-started/101/concepts/#claytons-or-static-collections","title":"Claytons (or static) Collections","text":"<p>All the previous examples on this page are for live Collections. i.e. the Collections code is installed and is actively modifying how you are seeing your Canvas site's module page.  Not everyone can install the Collections code.</p> <p>Claytons Collections provides the ability to use the Collections representations on a static Canvas page. Using Claytons collections does not require the Collections code to be installed.</p> <p>Claytons Collections can be used to follow Canvas community best practice to create an inviting course home page. A home page that can emulate the features of Collections, without requiring Collections. The animated image is a demonstration.</p> <p>See the \"Claytons\" Collections reference page for more.</p> Using Claytons Collections to create a visual home page <p></p>"},{"location":"getting-started/101/overview/","title":"Collections 101","text":"<p>The difference between Collections and collections</p> <p>The use of upper or lower case C is deliberate, the difference is</p> <ul> <li>Collections - refers to Canvas Collections, the entire tool.</li> <li>collections - refers to one or more collection of Canvas modules you create and manage using Collections (the tool).</li> </ul> <p>The following table summarises the introduction Collections 101 provides.</p> Page Description Concepts Introduces the four core concepts for Collections: Canvas Modules (the starting place); collections (add structure); representations (add visuals); objects (add context); and, Claytons (static) Collections Navigate Explain how you navigate the Canvas Modules page once Collections is installed. Covers both \"live\" and \"Claytons\" navigation Configure Explain how you configure a course to use Collections"},{"location":"getting-started/101/why-what-how/","title":"Why what how","text":""},{"location":"getting-started/101/why-what-how/#why-what-and-how","title":"Why, what and how?","text":"<p>This 8m50s video provides an introduction to the why, what and how of Canvas Collections.</p> <p>Introduce Canvas Collections  - Why / What and How</p> <p>Process </p> <p>Intro - home page - Explain high level description - replace this with home page</p> <p>Demonstration</p> <ul> <li>Vanilla modules -- can do better explanation</li> </ul> <p>Move onto Canvas Collections</p> <p>Navigate</p> <ul> <li>Show the course</li> </ul> <p>Configuration</p> <ul> <li>Edit on and explain</li> </ul>"},{"location":"getting-started/101/interface/configuration/","title":"Configuration","text":"<p>Configuring Collections is more complex than navigating Collections. Meaning the Collections configuration interface is more complex.</p> <p>Only visible to certain people at certain times</p> <p>The configuration interface is only visible to people who are able to edit collections.</p> <p>See the Configure section for more.</p> OverviewCollections elementcollections configuration elementModule configuration element <p>The configuration interface stretches across the whole modules page. The following summary and visual provides an overview. See other tabs for more detail (click on the figure to see a bigger version).</p> Element Description Collections element <p>A small element always present whenever Collections is installed and the modules page is being viewed by someone who can edit Collections.</p><p>The Collections element provides an indication of the current state of Collections and provides access to the collections configuration element.</p> Collections module configuration <p>Every module will have its own Collections module configuration element. It is used to add and modify data about the module that will be used by Collections.</p><p>These can be expanded and collapsed as required.</p> <p> Overview of the Collections configuration interface across the entire modules page </p> <p>If Collections is installed and you are able to edit Collections, you will always see the Collections element at the top off the modules page. To the left of the Student View button. The Collections element provides an indication of the current state of Collections and provides access to the collections configuration element. The following figured represent some of the different states of the Collections element.</p> Collections has never been turned on for the course. Collection is turned on and \"published\" (students can see the Collections navigation interface) Collections is turned on, but the visibility is set to no-one (the red unpublished icon). Collections is on, visibility is no-one, and the Collections configuration page is unpublished <p> Collections is turned on, visible to all, and is in edit mode </p> <p>The collections configuration element is how you configure collections and perform other course level tasks. It has a number of sub-components summarised in the following table, illustrated below, and explained in more detail elsewhere.</p> <p>It is accessed by clicking on the arrow icon in the Collections element with Edit on. It drops down over the top of the modules page.</p> Sub-component Description Title &amp; version <p>Are you using the latest version of Collections?</p> Visibility <p>Allows visibility - who can see the Collections navigation interface - to be set to one of four values</p> Existing Collections <p>A list of all the current collections configurated for the course. Allowing you to modify them, delete them, change the order etc.</p> Add a new collection <p>Choose a name and a representation and add another collection to the course.</p> Full \"Claytons\" <p>When configured, generate a static version of the Collections navigation interface</p> <p> The collections configuration element </p> <p>With Edit on, each Canvas module will have its own Collections module configuration element, which include the following sub-components.</p> Sub-component Description Collapsible header <p>The entire configuration element is collapsible. Click on the header to collapse or expand the element.</p> Configuration tabs <p>There are currently four tabs. Each tab contains a different  configuration area. </p> Configuration areas <p>Four including:</p><ol> <li> General - descriptions, labels, and other common data.</li> <li> Dates - specify a date or date range.</li> <li> Banner - configure the banner (image, iframe, or background colour) for cards. </li> Metadata - additional ad hoc meta data used by some representations. </ol> <p> One Collection's module configuration element </p>"},{"location":"getting-started/101/interface/navigation/","title":"Navigation","text":"<p>Navigation in Collections has two flavours: live and Claytons (static). The following summarises the live navigation experience.</p>"},{"location":"getting-started/101/interface/navigation/#navigating-live-collections","title":"Navigating live Collections","text":"<p>Collections will make up to four navigation changes to the Canvas modules page. Who sees these changes is defined by Collections' visibility setting. </p> <p>The four changes are summarised in the following table and labelled in the image below.</p> <p>See the Navigating Live Collections page for more detail.</p> Navigation element Description Navigation bar <p>Shows a list of all collections and allow navigation back and forth between collections. </p> Include page (optional) <p>Each collection can have a single Include page. i.e. a Canvas page, the content of which will be inserted before or after the Current collection representation.</p><p>Note: Only the current collection's include page is shown.</p> Current collection's representation <p>Each collection chooses from one of the available representations (including the CollectionsOnly representation that is empty). These are designed to provide a bespoke visualisation of information about the Canvas modules.</p> Current collection's Canvas modules <p>ALl of the above interface elements are placed before the normal list of modules displayed on the Canvas modules page. The one last change Collections makes is to hide all those modules that do not belong to the current collection (and other configuration choices).</p> An example modules page modified with Collection's navigation interface elements <p></p>"},{"location":"getting-started/101/interface/navigation/#navigating-claytons-collections","title":"Navigating Claytons Collections","text":"<p>Claytons Collections creates a static representation of the Collections navigation interface element in one or more Canvas pages. These static representations can be used to navigate to specific Canvas modules without the Canvas Collections code.</p> <p>The following animated image demonstrates navigating Claytons Collections configured for the sample course. In this example, the course home page is using a \"full claytons\" approach. Such an approach emulates a normal live Collections interface.</p> <p>See the Navigating Claytons Collections page for more detail.</p> Animated example of navigating Claytons Collections <p></p>"},{"location":"getting-started/install/how-to-install/","title":"Install Canvas Collections","text":"<p>Depending on your need and access, you must decided between two ways to install Canvas Collections: individual or institutional. The following table explains the differences.</p> Individual Institutional Purpose <p>For teachers/designers to experiment with Collections.</p><p>Possibly also to create visual home/landing pages for use without Collections.</p> <p>For institutions to make Canvas Collections available to all teachers/designers.</p> Who installs it? <p>You.</p><p> Anyone (with teacher/designer roles in Canvas) is able use the individual installation method.</p> <p>Your institution.</p> <p>Typically the institution's Canvas administrator. Since at an institutional level, Collections is installed directly into Canvas and is available to all users.</p> Who can use it? <p>The person using the individual installation method can use Collections to configure and navigate courses. Also use it to create visual landing pages.</p> <p>Once installed institutionally, exactly how people can use Collections will depend on the role they have in Canvas courses.</p> <p> Teachers/designers will be able to configure Collections for courses. Students will only be able to use Collections, if the course already has Collections configured.</p> How is it installed? <p>You install the Canvas Collections userscript into your browser.</p> <p>An institution's Canvas administrator installs it into Canvas using the Theme Editor</p> How to do it Install \"individual\" Collections Install \"institutional\" Collections"},{"location":"getting-started/install/individual/","title":"Individual Installation (and uninstall)","text":"<p>An individual installation means Collections is only working for you. Only you (or anyone else who with an individual installation) can see Collections.</p> <p>To do this Canvas Collections is installed into your web browser as a userscript. </p> <p>About userscripts and userscript managers</p> <p>You install a userscript manager (Step #1) into your web browser (not surprisingly) to help manage userscripts. Small Javascript programs that your browser will run when you view specific web pages. Userscripts customise those web pages to better suit your purposes. e.g. to modify the Canvas modules view by adding Collections.</p>"},{"location":"getting-started/install/individual/#installation","title":"Installation","text":"<p>There are three steps for an individual installation</p>"},{"location":"getting-started/install/individual/#1-install-a-userscript-manager","title":"1. Install a userscript manager","text":"<p>TamperMonkey is a widely used userscript manager. It can be used on most modern web browsers. </p>"},{"location":"getting-started/install/individual/#11-visit-the-tampermonkey-home-page","title":"1.1 - Visit the Tampermonkey home page","text":"<p>You should see instructions for downloading (installing) TamperMonkey for your web browser. e.g. the following image for the Firefox browser</p> Tampermonkey home page for Firefox <p> </p>"},{"location":"getting-started/install/individual/#12-click-on-the-left-hand-download-button","title":"1.2 - Click on the left-hand Download button","text":"<p>As shown above, you can choose to download the stable (left-hand download button) version of TamperMonkey or the BETA (right-hand download button) version. The stable version is recommended.</p> <p>You will be taken to your web brower's extension or add-on service.</p>"},{"location":"getting-started/install/individual/#13-follow-the-instructions-to-add-tampermonkey-to-your-web-browser","title":"1.3 - Follow the instructions to add Tampermonkey to your web browser","text":"<p>Each web browser\u2019s browser extension installation process will be a little different. In general, it will provide you with details of what permissions the browser extension (Tampemonkey in this case) wishes to have and provides you with the option to install.</p>"},{"location":"getting-started/install/individual/#2-install-the-collections-userscript","title":"2. Install the Collections userscript","text":"<p>With TamperMonkey installed you can now </p> Install the Collections userscript <p>If all is working you should something like the following image. An image showing TamperMonkey providing you with details of the userscript and asking if you wish to install (or perhaps update) it.</p> Installing the Canvas Collections userscript <p>)  </p>"},{"location":"getting-started/install/individual/#3-does-it-work","title":"3. Does it work?","text":"<p>It you've successfully completed these steps, the check out the Is it installed? page for how to check if Canvas Collections is working.</p>"},{"location":"getting-started/install/individual/#disable-or-uninstall-collections","title":"Disable or Uninstall Collections","text":"<p>There are four methods to prevent Canvas Collections from modifying your view of Canvas modules pages.</p> Method Result Description Remove TamperMonkey Uninstallation The TamperMonkey home page includes a video (at the bottom of the page) that demonstrates how to remove TamperMonkey from your web browser. This also uninstalls Collections. Disable TamperMonkey Disable TamperMonkey Remove Canvas Collections userscript Uninstall If you use TamperMonkey for other purposes, you can remove just the Canvas Collections userscript Disable Canvas Collections userscript Disable Turn off the Collections userscript so it doesn't run."},{"location":"getting-started/install/individual/#tampermonkey-icon","title":"TamperMonkey icon","text":"<p>The last three ways rely on using the TamperMonkey icon added to your web browser's toolbar - see the following image. </p> <p>TamperMonkey icon may not appear in the toolbar</p> <p>Not all browser extensions (e.g. TamperMonkey) will appear in your browser's toolbar. You may need to user more detailed, browser specific steps to find the TamperMonkey icon.</p> Opening the Tampermonkey browser dropdown <p> </p>"},{"location":"getting-started/install/individual/#disable-tampermonkey","title":"Disable TamperMonkey","text":"<p>Click the Enabled option shown in the image above to disable TamperMonkey - see the following image. With TamperMonkey disabled, Canvas Collections will not be run.</p> Tampermonkey disabled <p></p>"},{"location":"getting-started/install/individual/#disable-or-remove-the-canvas-collections-userscript","title":"Disable or remove the Canvas Collections userscript","text":"<p>By accessing the TamperMonkey dashboard you can remove or disable specific userscripts, including Canvas Collections. The dashboard is an option provided via the TamperMonkey icons - see the following image.</p> How to open the Tampermonkey dashboard <p> </p> <p>Clicking on the dashboard option will open the TamperMonkey dashboard. The dashboard will show you all the userscripts you have installed and provide options to </p> <ul> <li> <p>enable/disable a userscript; and,</p> <p>Note the Enabled column in the following image. Click on the switch to enable/disable a userscript. - remove a userscript.</p> <p>Note the trashcan icon in the Actions column in the following image. Click on the trashcan icon to remove a userscript.</p> </li> </ul> Viewing the Tampermonkey dashboard <p></p>"},{"location":"getting-started/install/institutional/","title":"Collections: Institutional installation","text":""},{"location":"getting-started/install/institutional/#background","title":"Background","text":"<p>An institutional installation of Canvas Collections involves using the Canvas Theme Editor to add the Collections JavaScript and CSS files to your institution's Canvas instance. Typically, your institution will have specific policies and practices governing which, how and where such files will be hosted. The following provides the bare basics of how to achieve this.</p> <p>There are at least two broad approaches to this:</p> <ul> <li>Uploading - the simplest approach, only works if your institution isn't already using the Canvas Theme Editor to inject JavaScript and CSS into Canvas.</li> <li>Using a Content Delivery Network (CDN) - required to add Collections to your institution's existing custom JavaScript/CSS.</li> </ul>"},{"location":"getting-started/install/institutional/#uploading","title":"Uploading","text":""},{"location":"getting-started/install/institutional/#1-download-or-build-the-required-files","title":"1. Download (or build) the required files","text":"<p>The Collections GitHub repository does include a recent copy of these files which you can download and use. The files are:</p> <ol> <li>canvas-collections.js - the code implementing Collections, and</li> <li>canvas-collections.css - the CSS declarations specifying the look and feel of Collections.</li> </ol> <p>You can also build your own version of these files. See the local development page for more.</p>"},{"location":"getting-started/install/institutional/#2-upload-those-files-using-the-theme-editor","title":"2. Upload those files using the theme editor","text":"<p>The Canvas theme editor allows authorised people to include additional Javascript and CSS into a Canvas theme. This theme is then applied to course sites and Collections is available for use.</p> <p>The figure below shows the relevant portion of the Themes Editor. Use the relevant file upload elements to upload the files you downloaded in step 1.</p> CSS and JavaScript file uploads in the Canvas Theme editor <p>)  </p>"},{"location":"getting-started/install/institutional/#using-a-cdn","title":"Using a CDN","text":"<p>If your institution already has custom CSS/JavaScript you will need to follow an institutionally specific method for including the Collections CSS/JavaScript. Typically this will involve hosting the Collections files on an institutionally approved Content Delivery Network (CDN).</p> <p>The live-canvas-collections.js file in the Collections repository provides one example approach. It is a JavaScript function that will add the Collections CSS/JavaScript files to the current page. It retrieves the files from one a number of available CDNs.</p>"},{"location":"getting-started/install/is-it-installed/","title":"Is Collections installed?","text":""},{"location":"getting-started/install/is-it-installed/#pre-requisites-for-collections","title":"Pre-requisites for Collections","text":"<p>For you to configure a course to use Canvas Collections you need to </p> <ol> <li>Have installed Canvas Collections</li> <li>Have a teacher or designer role in a Canvas course.</li> </ol> <p>Can you student the Student View button?</p> <p>If you can see the Student View button when viewing the Modules page?</p> <p>Then Collections considers you have a teacher or designer role. Meaning you can configure Collections.</p> <p>Then, to see if Collections is installed...</p>"},{"location":"getting-started/install/is-it-installed/#go-to-the-module-view-of-the-course-site","title":"Go to the Module view of the course site","text":"<p>If all is working, as a teacher or designer you should see the Canvas Collections box appear at the top of the page next to the Student View button, as shown in the following image.</p> Can you see Collections? <p> </p>"},{"location":"getting-started/install/is-it-installed/#turn-it-on","title":"Turn it on","text":"<p>By default, Canvas Collections is turned off. Use the toggle to turn it on. Initially, you won't see much change, beyond a slight difference in the Collections configuration element.</p> <p>Has to be on to make changes</p> <p>Collections will only modify the Canvas module view when it is turned on.</p> <p>What changes you see will depend on</p> <ol> <li>What changes have been configured.</li> <li>If Collections' visibility setting is set appropriately.</li> </ol> After you turn Collections on for the first time <p> </p>"},{"location":"getting-started/use/types/","title":"Using Canvas Collections","text":"<p>Canvas Collections modifies how you can visualise and navigate the Canvas Modules page. As summarised int he following table, there are two ways you can use Canvas Collections.</p> Attributes Live Claytons Description The Collections Javascript code is live and actively modifying what you see when viewing the Canvas Modules page. You use a static Canvas page to navigate to specific modules. The page was created using live Canvas Collections Requirements You are able to run the Collections Javascript code because it has been installed in your Canvas instance or as a userscript. The modified Canvas page has been published. (Collections Javascript is not required to view). What can it do? The full functionality of Collections, including (for people with appropriate permissions) the ability to configure Collections, and some dynamic features. Any one needing to navigate the Canvas modules page using a static interface."},{"location":"getting-started/use/types/#live-collections","title":"Live Collections","text":"<p>The following example demonstrates the live use of Collections to navigate a modules page that has been divided into three collections: Why?, What?, and How?. It shows navigating between the collections. How each collection's page only contains the modules associated with that collection. It also shows how each collection is represented using the Cards representation and how clicking on a card will show the associated module.</p> <p></p>"},{"location":"getting-started/use/types/#claytons-collections","title":"Claytons Collections","text":"<p>The following example demonstrates the Claytons use of Collections using the exact same course site as the previous example. The major difference is that the Collections Javascript code is no included. Only the vanilla Canvas modules page is available. Instead, the home page is used to navigate between collections and to specific modules.</p> <p></p>"},{"location":"navigate/navigate-options/","title":"Navigating Collections: Overview","text":"<p>How do you navigate Collections?</p> <p>Collections aims to improve the navigation experience of the Canvas Modules page. </p> <p>What does that look like? How do you navigate a course using Collections?</p>"},{"location":"navigate/navigate-options/#two-navigation-experiences","title":"Two navigation experiences","text":"<p>Collections provides two (slightly) different navigation experiences.</p>"},{"location":"navigate/navigate-options/#1-live-collections","title":"1. \"Live Collections\"","text":"<p>Live Collections modifies the Canvas Modules page. Navigating Live Collections requires the Collections code to be installed.</p> <p>Learn more about navigating Live Collections</p> Example navigating Live Collections <p>"},{"location":"navigate/navigate-options/#2-claytons-collections","title":"2. Claytons Collections","text":"<p>Claytons Collections emulates Live Collections by generating static HTML onto Canvas page(s). Navigating Claytons Collections does not involve the Collections code.</p> <p>Learn more about navigating Claytons Collections</p> Example navigating Claytons Collections <p>"},{"location":"navigate/navigating-claytons-collections/","title":"Navigating Claytons Collections","text":"<p>How do you navigate Claytons Collections?</p> <p>Claytons Collections is where Collections has been used to generate full navigation using pages. i.e. it creates static HTML representations of the Collections' navigation interface on a normal Canvas page </p> <ol> <li>What does Claytons Collections look like? What navigation elements are there?</li> <li>How do you use Claytons Collections to navigate a course's modules?<ul> <li>How do you switch between collections?</li> <li>How do you navigate to a specific module?</li> </ul> </li> </ol> <p>Claytons may not always be up to date</p> <p>Claytons Collections is a static representation of the collections. It is not automatically updated when changes are made to either a course's modules or Collections configuration. This means that Claytons may not always be up to date. </p> <p>Hence it is important for the teacher/designer using Claytons to update the Claytons view when other changes are made. </p> <p>\u2757 This includes after a course copy</p>"},{"location":"navigate/navigating-claytons-collections/#what-does-it-look-like","title":"What does it look like?","text":"<p>Claytons Collections provides almost all the same navigation elements as Live Collection. There are two differences:</p> <ol> <li>The representation is done using static HTML, no live code.</li> <li> <p>As it is displayed on a normal Canvas page, there is no list of Canvas modules.</p> <p>Instead, clicking on the Engage button will navigate to the Modules view whether the module is available.</p> </li> </ol> _Claytons_ Navigation Elements <p></p>"},{"location":"navigate/navigating-claytons-collections/#how-do-you-switch-between-collections","title":"How do you switch between collections?","text":"<p>In Claytons Collections, switching between collections is also done with the navigation bar.  However, as the Collections code is not running it will not remember the last collection you viewed.</p>"},{"location":"navigate/navigating-claytons-collections/#how-do-you-navigate-to-a-module","title":"How do you navigate to a module","text":"<p>Navigating to a module from Claytons Collections involves clicking on one of the module representations. This will navigate to the Modules view with the chosen module immediately visible.</p> <p>One way to return to the Claytons page would be to hit the browser back button.</p>"},{"location":"navigate/navigating-live-collections/","title":"Navigating Live Collections","text":"<p>How do you navigate live Collections?</p> <p>Live Collections is where Collections actively modifies the Canvas modules page as you are viewing it (it's a live modification).</p> <ol> <li>What does that look like? What are the navigation elements you see?</li> <li>How do you use live Collections to navigate a course's modules?<ul> <li>How do you switch between collections?</li> <li>How do you navigate to a specific module?</li> </ul> </li> </ol>"},{"location":"navigate/navigating-live-collections/#what-does-it-look-like","title":"What does it look like?","text":"<p>The following image shows the navigation elements added to the Canvas Modules page by Live Collections. See the Navigation 101 page for more details.</p> _Live_ Collections navigation elements <p></p>"},{"location":"navigate/navigating-live-collections/#how-do-you-switch-between-collections","title":"How do you switch between collections?","text":"<p>The Collections navigation bar displays a list of all the collections of modules in the course. You navigate between collections by using the navigation bar.</p> <p>Initially, Collections will show you the default collection as configured for the course.</p> <p>If you navigate away from the Modules page, Collections will remember which collection you were last viewing. On your return, it will show you that collection. At least if you are using the same browser you used on your previous visit.</p> <p>Each collection will have its own anchor link. That is, a link that will take a visitor directly to that collection. The anchor link is based on the collections' order in the navigation bar. For example, the first collection will have an anchor link of <code>#cc-collection-0</code>, the second <code>#collection-1</code> and so on.</p> Switching between collections with _Live_ Collections <p>"},{"location":"navigate/navigating-live-collections/#how-do-you-navigate-to-a-module","title":"How do you navigate to a module?","text":"<p>Canvas modules are grouped into Collections. To navigate to a specific module, you must first navigate to the collection that contains the module. Each collection may have an additional visual representation or the modules it contains. Below the representation will be the standard Canvas list of modules, including just the modules allocated to the collection.</p> <p>Once in a collection, you find a module by clicking on the module's representation (if the collection has one), or scrolling down the modules page until you find it.</p> Finding a module within a collection using _Live_ Collections <p>"},{"location":"reference/overview/","title":"Reference - Canvas Collections","text":"<p>References provide short descriptions of specific aspects of Collections.</p> LifecycleConceptual Model <p>Information about the lifecycle of using Collections as experienced by the user.</p> Concept Description Visibility Who can see Collections and when Student view How students experience Collections Staff view How staff experience Collections Course Copy How Collections is handled during a course copy <p>Collections is designed using a conceptual model. Understanding that conceptual model may help you understand how to use Collections more effectively. </p> <p>See the Collections' Conceptual Model page for more.</p>"},{"location":"reference/conceptual-model/overview/","title":"Collections' Conceptual Model","text":"<p>Collections is made up of four main concepts summarised in the table below. </p> <p>For reference information on using each concept to configure Collections, use the relevant link in the following table.</p> <p>For video examples of each concept, see the Concepts page in the Getting Started section.</p> Concept Description collections Canvas modules are grouped into collections representations collections can be visualised in different ways using representations objects By adding more context/design specific information to a Canvas module you can transform it (at least visually) into a context-specific object Claytons A method to add the Collections' representations to a static Canvas page. Allowing people to use the representation without needing Collections. It is the Claytons version of Collections. The Collections you have, when you're not having Collections Claytons A method to add the Collections' representations to a static Canvas page. Allowing people to use the representation without needing Collections. It is the Claytons version of Collections. The Collections you have, when you're not having Collections <p>The difference between Collections and collections</p> <p>The use of upper or lower case C distinguishes between two different concepts:</p> <ol> <li>Collections - refers to Canvas Collections, the entire tool.</li> <li>collections - you use the tool (Collections) to create collections and allocate different Canvas modules to belong to different collections.</li> </ol>"},{"location":"reference/conceptual-model/collections/add-a-new-collection/","title":"Add a new collection","text":"<p>Add a new collection is an one component of an open Collections configuration dialog (e.g. the following image). It is used to add a new collection.</p> <p></p>"},{"location":"reference/conceptual-model/collections/add-a-new-collection/#features-and-properties","title":"Features and Properties","text":"<p>Add a new collection provides three features/properties:</p> <ol> <li>Specify the name of the new collection.</li> <li>Select the representation for the new collection.</li> <li>Add the new collection.</li> </ol>"},{"location":"reference/conceptual-model/collections/add-a-new-collection/#name","title":"Name","text":"<p>A collection's name is used as part of the Canvas Collections navigation bar. i.e. it is visible to site visitors and used to identify the collection. In theory a name can be as long as you like, however, it will need to fit appropriately into the navigation bar.</p> <p>You enter the name using the provided text box.  The name can be changed after the collection is created - see the Existing collections page.</p> <p>Each collection's name must be unique.</p>"},{"location":"reference/conceptual-model/collections/add-a-new-collection/#representation","title":"Representation","text":"<p>A collection's representation specifies how its modules will be presented visually to the site visitor. Once a collection is created, the representation can be changed at any time and as many times as necessary.</p> <p>To choose the representation for the new collection, select the desired representation from the provided menu.</p>"},{"location":"reference/conceptual-model/collections/add-a-new-collection/#adding-a-new-collection","title":"Adding a new collection","text":"Adding a new collection"},{"location":"reference/conceptual-model/collections/existing-collections/","title":"Existing Collections","text":"<p>Existing Collections is one component of an open Collections configuration dialog (e.g. the following image). It is used to configure the collections that have already been added to the course.</p> An example \"existing collections\" view <p></p>"},{"location":"reference/conceptual-model/collections/existing-collections/#features-and-properties","title":"Features and Properties","text":"<p>Existing Collections provides access to the following features and properties for each of the existing collections.</p> <ul> <li>what is the collection's name and number of allocated modules;</li> <li>change the order of collections;</li> <li>delete a collection;</li> <li>change the name of a collection;</li> <li>change the collections' representation;</li> <li>specify whether the collection should be: the default collection or hidden.</li> <li>specify that unallocated modules should be included in the collection's representation;</li> <li>specify a Canvas page that will be included in the collection's representation; and,</li> <li>specify an Canvas page to update with the collection's current representation.</li> </ul>"},{"location":"reference/conceptual-model/collections/existing-collections/#name","title":"Name","text":"<p>Each collection must have a unique name. The name is displayed on the Collections navigation bar and provides a way to identify the collection. The name can include emojis.</p> <p>In the Existing collections element the collection's name will be shown both in the title (along with the number of modules currently allocated to the collection) and in the textbook you can use to change the name.</p> Making changes to a collection's name <p></p>"},{"location":"reference/conceptual-model/collections/existing-collections/#representation","title":"Representation","text":"<p>Each collection can select a representation to visualise the collection's allocated modules. The representation can be changed at any time and as many times as necessary.</p> <p>The Existing collections element provides a menu that displays the current representation and allows you to choose another representation.</p> Changing a collection's representation <p></p>"},{"location":"reference/conceptual-model/collections/existing-collections/#default","title":"Default","text":"<p>The very first time someone visits the modules page with Canvas Collections they will be shown the default collection. After that, the last collection they viewed will be shown.</p> <p>One of the collections shown in Existing collections must be set as the default collection.</p> <p>The default collection cannot be hidden.</p> <p>Each collection in the Existing collections element has a Default checkbox to indicate if it is the default collection. Select the Default checkbox for another collection to specify that it is the default collection.</p> Changing the default collection <p></p>"},{"location":"reference/conceptual-model/collections/existing-collections/#hide","title":"Hide","text":"<p>If you're still working on the configuration of a collection you may wish to hide it from students. Each collection in the Existing collections element has a Hide checkbox to indicate if it is hidden. Select the Hide checkbox for a collection to hide it.</p> <p>You can not hide the default collection</p> Hiding a collection <p></p>"},{"location":"reference/conceptual-model/collections/existing-collections/#add-unallocated","title":"Add unallocated","text":"<p>Normally, the representation for the current collection will only show modules that have been explicitly allocated to that collection. There are times when you may wish to include unallocated modules in a collection (i.e. modules that don't below to any collection).</p> <p>The Existing collection element provides a Add unallocated checkbox to indicate if unallocated modules should be included in the collection's representation. Select the Add unallocated checkbox to include unallocated modules in the collection's representation.</p> <p>Use unallocated if you want modules to appear in more than 1 collection</p> Adding unallocated modules to a collection <p></p>"},{"location":"reference/conceptual-model/collections/existing-collections/#include-page","title":"Include page","text":"<p>Each collection can have a Canvas page defined as its include page. The contents of an include page will be inserted before or after that current collection's representation. </p> <p>You specify the include page by providing the name of a page. Collections will attempt to retrieve exactly the name given.</p> <p>No include page if the include page name isn't found</p> <p>The title of a Canvas page (what you see in the Canvas RCE) doesn't always match the page name used by Canvas (for example)</p> <p>If Collections is unable to find the name it will display an error message for staff, but nothing to students.</p> <p>The Existing collection element provides </p> <ul> <li>an Include page textbox in which you enter the title of the Canvas page; and,</li> <li>an After checkbox which you use to indicate if you want the include page contents to appear after the representation</li> </ul> Using the \"include page\" feature <p></p>"},{"location":"reference/conceptual-model/collections/existing-collections/#output-page","title":"Output page","text":"<p>Each collection can also define a Canvas page as the output page. You can use Collections to update the contents of the output page with the current representation of that collection. This can be done on as for a single collection, or use Full Claytons to do it for all collections with an output page defined.</p> <p>The Existing collections element provides </p> <ul> <li>an output page text box in which you enter the title of the Canvas page; and,</li> <li>an Update button you use to update the output page with the current representation of the collection.</li> </ul> Using the \"output page\" feature <p></p>"},{"location":"reference/conceptual-model/collections/existing-collections/#other-functions","title":"Other functions","text":"<p>The Existing collections element also allows you to change the order of the collections and delete a collection.</p>"},{"location":"reference/conceptual-model/collections/existing-collections/#changing-the-order-of-collections","title":"Changing the order of collections","text":"<p>Each of the collections in the Existing collections element will have up/down arrow icons in the top right corner of that collection's section. Use these arrows to move the collection up or down the list of collections.</p> Changing the order of collections <p></p>"},{"location":"reference/conceptual-model/collections/existing-collections/#deleting-a-collection","title":"Deleting a collection","text":"<p>If you no longer require a collection you can delete a collection. Each collection in the Existing collections element will include a trash can icon in the top left corner. Click on that icon to delete the collection.</p> <p>Deleting a collection will not delete any of the modules that have been allocated to the collection, or modify any other module based configuration information.</p> Deleting a collection <p></p>"},{"location":"reference/conceptual-model/collections/full-claytons/","title":"Full Claytons","text":"<p>Claytons Collections provides the ability to write the live Canvas Collections representation of a single or multiple collections to one or more Canvas pages. The purpose being to enable students and others to use the Collections representation without requiring the Collections code.</p> <p>This can be done via two means:</p> <ol> <li>Update a single collection's page; or,</li> <li>Update all collections with an output page at once - i.e. Full Claytons</li> </ol> <p>The Full Claytons capability is accessed via the Collections configuration element.</p> An example _Full Claytons_ element from the _Collections configuration element_ <p></p>"},{"location":"reference/conceptual-model/collections/full-claytons/#how-does-full-claytons-work","title":"How does Full Claytons work?","text":"<p>Full Claytons works by:</p> <ol> <li>Identifying all of the existing collections that have a configured output page.</li> <li>Then using the navigation bar option button you pressed it will write the current representation of each collection (identified in step 1) to the specified output page</li> </ol>"},{"location":"reference/conceptual-model/collections/full-claytons/#navigation-bar-options","title":"Navigation Bar Options","text":"<p>The navigation bar options for Full Claytons support different ways of using Claytons Collections across multiple pages and how you wish navigation to occur between those pages. The combination of the chosen navigation bar option and how existing collections have used the output page property will determine the end result.</p> Navigation Bar Option Description <code>None</code> No navigation bar will be added to any of the collections' output page. <code>Pages</code> <code>Tabs</code>"},{"location":"reference/conceptual-model/collections/full-claytons/#example-full-claytons-with-none-navigation-bar-option","title":"Example - Full Claytons with <code>None</code> navigation bar option","text":"<p>The following animated image demonstrates the use of Full Claytons using the <code>None</code> navigation bar option. The process shown, includes:</p> Example of using _Full Claytons_ with the `None` navigation bar option <p></p>"},{"location":"reference/conceptual-model/collections/live/","title":"Live Collections","text":""},{"location":"reference/conceptual-model/collections/overview/","title":"collections","text":"<p>The difference between Collections and collections</p> <p>The use of upper or lower case C distinguishes between two different concepts:</p> <ol> <li>Collections - refers to Canvas Collections, the entire tool.</li> <li>collections - you use the tool (Collections) to create collections and allocate different Canvas modules to belong to different collections.</li> </ol> <p>collections are the key feature of Canvas Collections. They support organising Canvas modules into design and context specific groups of modules - a feature long requested by the Canvas Community.</p> <p>The figure below is an example of a typical Collections configuration dialog. The following table provides a description of the major components of the dialog and a pointer to more information.</p> Component Description Version number <p>Next to the Configure Canvas Collections title is the version number of Collections being used (e.g. 1.1.0). This is useful for reporting bugs and identifying if you've the latest Collections' version.</p> Visibility <p>Specify to whom Collections will be visible.</p> Existing collections <p>A list of the collections for this course. Use this to move and delete collections, change various collections values. </p> Add a new collection <p>Use this to add a new collection to the course.</p> Full \"Claytons\" <p>How you can generate a \"Claytons\" version of your course's Collections.</p> A typical Collections configuration dialog <p> </p>"},{"location":"reference/conceptual-model/collections/update-single-collection/","title":"Update a single collection's output page (\"claytons\")","text":""},{"location":"reference/conceptual-model/collections/update-single-collection/#how-to","title":"How to","text":""},{"location":"reference/conceptual-model/collections/update-single-collection/#specify-an-output-page","title":"Specify an output page","text":"<p>Each collection's area in the Existing Collections area of the Collections configuration area has an output page text box (see following image).  Enter the name of an existing page in the text box. The \"name\" of the page is \"Page Title\" you will see when you edit the page. </p> <p>In the following image the Course Content collection has been configured with an output page with the name Home Page.</p> <p> </p>"},{"location":"reference/conceptual-model/collections/update-single-collection/#update-a-single-collection","title":"Update a \"single\" collection","text":"<p>In the image above there is an Update button next to the output page name. Clicking this button will update the output page with the current content of that collection.  </p> <p>The following animated image demonstrates the process, including these steps:</p> <ol> <li>Show the existing Canvas page with some content already in it.</li> <li>Open up the Collections configuration area and find the output page for the Why? collection.</li> <li>Click the update button and observe the alert generated informing of the updates successful completion.</li> <li>Going back to the Canvas page and reloading it to see that the Why? collection's representation has been added to the bottom of the page.</li> </ol> <p></p>"},{"location":"reference/conceptual-model/collections/visibility/","title":"Visibility - Collections Configuration","text":""},{"location":"reference/conceptual-model/objects/banner/","title":"Banner","text":""},{"location":"reference/conceptual-model/objects/banner/#banner-tab-the-module-configuration-area","title":"Banner tab - the module configuration area","text":"<p>The banner tab is one of four tabs that form the module configuration area. It provides the interface to configure a banner (image, iframe, or colour) associated with a specific module (see below).</p> <p>The banner option only applies to one (some) representations</p> <p>How an object is represented is the responsibility of the chosen representation. Currently, only the Griffith Cards representation uses the banner options.</p> <p>Collection's cards representation uses the idea of a banner as the top section of the card (circled in red in the following image). It is used provide an additional visual representation of the module with the intent to enhance</p> <ol> <li>the visual design of the course; and,</li> <li>student learning (see dual-coding theory).</li> </ol> Card representation with the banner section highlighted <p> </p>"},{"location":"reference/conceptual-model/objects/banner/#three-types-of-banner","title":"Three types of banner","text":"<p>As illustrated in the image above, there are three common types of banner:</p> <ol> <li> <p>Image - the URL of an image is provided and is displayed in the banner.</p> <p>The first image above uses an image to reinforce the primary purpose of Collections.</p> </li> <li> <p>Iframe - a HTML iframe element used to embed another web page</p> <p>The second card above shows an embedded Canvas Studio video.</p> </li> <li> <p>Colour - the banner background is set to a single colour.</p> <p>The last card above has a plain colour background.</p> </li> </ol>"},{"location":"reference/conceptual-model/objects/banner/#choosing-the-banner-type","title":"Choosing the banner type","text":"<p>The Collections' module configuration area includes a banner tab. This allows you to </p> <ol> <li>Choose the type of banner to use; and,</li> <li>Configure the chosen banner.</li> </ol> <p>The following animated image demonstrates where to find the banner tab and how which ever banner option you've chosen last, is the option used by the representation.</p> Switching between different types of banner <p></p>"},{"location":"reference/conceptual-model/objects/banner/#configuring-the-chosen-banner-type","title":"Configuring the chosen banner type","text":""},{"location":"reference/conceptual-model/objects/banner/#image","title":"Image","text":"<p>Images are specified by two pieces of metadata:</p> <ol> <li>Image url - the web location where the image can be viewed.</li> <li>Image scale - how the image should be scaled to fit within the available space.</li> </ol>"},{"location":"reference/conceptual-model/objects/banner/#image-url","title":"Image url","text":"<p>Specifies the location (Universal Resource Locator - URL) for an image to display in the banner. The URL can be to an image stored in Canvas files, or to an image stored on another web site. The only constraint is that all visitors to the course site are able to access the image.</p> <p>Using an image in your course's files area</p> <p>Rather than rely on external images, you can use an image in your course's files area by generating a URL. </p> <p>Note: The Canvas Collections course copy process will update these URLs if you copy content to a new Canvas course site.</p> <p>Use of the placeholder image</p> <p>If the image banner type is chosen and no image url is specified, a placeholder image is used. </p> The placeholder image <p> </p>"},{"location":"reference/conceptual-model/objects/banner/#image-scale","title":"Image scale","text":"<p>It is likely that your chosen image does not have the same aspect ratio as the banner section of the card. This is especially true given that the size of the banner section is not fixed. It is responsive to the size of the browser window and the configuration of the Cards representation.</p> <p>Image scale is used to inform the browser how to scale your image to fit the available space.  Image scale modifies the scaling of the image using the standard CSS property called object-fit. The following table outlines the possible values for object-fit. These values appear in the Image scale drop down when configuring a module. </p> Value Description cover The image is scaled to fit the available space, maintaining the aspect ratio. The image is cropped to fit the available space. contain The image is scaled to fit the available space, maintaining the aspect ratio. The image is not cropped. fill The image is scaled to fill the available space, maintaining the aspect ratio. The image is cropped to fit the available space. fit The image is scaled to fit the available space, maintaining the aspect ratio. The image is not cropped. none The image is not scaled. scale-down The image is scaled to fit the available space, maintaining the aspect ratio. The image is not cropped. Experimenting with image scale values <p></p>"},{"location":"reference/conceptual-model/objects/banner/#image-alternative-text","title":"Image Alt(ernative) Text","text":"<p>Every image on a website - including banner images - should have an alternative text description. \"Alt text\" serves a number of purposes, including being used by screen readers.</p> <p>For more background on the importance of alt text and how to write good alt text, see this article</p> <p>Only text is allowed in the alt text field</p> <p>The alt text field does not allow you to use HTML. Any HTML will be removed.</p> Adding the alt text for an image <p></p>"},{"location":"reference/conceptual-model/objects/banner/#image-background-colour","title":"(Image) Background Colour","text":"<p>When using an image banner it can be useful to change the background of the banner from the default white. If selected, the Background Colour option will use the colour specified by the Colour feature (see below) as the colour in the background of your image.</p> Changing the image background colour <p></p>"},{"location":"reference/conceptual-model/objects/banner/#iframe","title":"Iframe","text":"<p>The iframe banner type allows you to embed another web page into the banner section using the HTML iframe element. Most useful for embedding video (e.g. from YouTube or Studio).</p> <p>Collections will check and modify the iframe code</p> <p>Collections will perform some checks on the iframe code, including attempting to ensure the iframe will fit within the banner section. </p> <p>You will be given a choice to check the modifications before proceeding.</p> Using the iframe banner type to embed a YouTube video <p></p>"},{"location":"reference/conceptual-model/objects/banner/#colour","title":"Colour","text":"<p>The colour banner type enables the use of a fixed colour for the banner. Useful in situations where a module represents a topic/purposes for which no photo or video is available or suitable. The colour is chosen using a colour component that allows you to specify the colour in numerous different ways.</p> Selecting a banner colour <p></p>"},{"location":"reference/conceptual-model/objects/dates/","title":"Dates tab - module configuration element","text":""},{"location":"reference/conceptual-model/objects/dates/#background","title":"Background","text":"<p>The dates tab is one of four tabs that form the module configuration area. It provides the interface to configure various date related properties to define a single date (just the start date) or a date range (from start date to stop date) for each module. Different</p> The \"dates tab\" of the module configuration area <p></p>"},{"location":"reference/conceptual-model/objects/dates/#properties","title":"Properties","text":"<p>As shown above the dates tab consists of four main components summarised in the following table.</p> Components Description Date label A text label that will be added before the date (range). e.g. \"Starts\" or \"Due\". Start Date A collection of properties that can be used to specify a date or the start of a date range. Stop Date A collection of properties that can be used to specify the end of a date range. Date output A human readable description of the current date. Using the date representation from the GriffithCards representation."},{"location":"reference/conceptual-model/objects/dates/#date-label","title":"Date label","text":"<p>The date label is intended as a short text label that will normally precede the rest of the date. For example, the image above is using Commencing as the date label.</p> <p>No HTML in the date label</p> <p>HTML tags included in the date label will appears as text. Will note change the appearance.</p>"},{"location":"reference/conceptual-model/objects/dates/#start-and-stop-date","title":"Start and stop date","text":"<p>The Start and Stop dates are used to define the time and date components. There are three common combinations of start and stop dates:</p> <ol> <li>Neither start nor stop dates defined - no date appears in any representation.</li> <li>Just the start date is defined - a single date appears.</li> <li>Both start and stop dates defined - a date range appears.</li> </ol> <p>The date/time properties available for both start and stop dates are summarised in the following table. Only two of these properties can be selected by you.</p> Property Description Select date Used to select which calendar date applies for this date Select Time (optionally) select the time of date for the date Day Automatically calculated based on the selected calendar date. Provided to enable inclusion in the date output Date Automatically calculated based on the selected calendar date. Provided to enable inclusion in the date output Month Automatically calculated based on the selected calendar date. Provided to enable inclusion in the date output"},{"location":"reference/conceptual-model/objects/dates/#visibility","title":"Visibility","text":"<p>For a selected date, each of the following components can be hidden by turning off the related visibility checkbox.</p> Property Description Time Whether or not the time is shown Day Whether the day of the week for the chosen date is shown Date Whether the numeric date of the month for the chosen date is shown Month Whether the abbreviated month name for the chosen date is shown"},{"location":"reference/conceptual-model/objects/dates/#date-output","title":"Date output","text":"<p>The final component of the dates tab is the date output. It provides a representation of the module's configured date/time (range) using the GriffithCards date representation. Provided to give immediate feedback on the current date configuration.</p>"},{"location":"reference/conceptual-model/objects/dates/#examples","title":"Examples","text":""},{"location":"reference/conceptual-model/objects/dates/#navigate","title":"Navigate","text":"<p>What visitors to a course site see in terms of dates depends on a combination of:</p> <ol> <li>how they data properties have been configured; and</li> <li>what representation is being used.</li> </ol> <p>For example, the following two figures demonstrate the appearance of the date configuration in the figure at the top of this page using the two most common representations.</p>"},{"location":"reference/conceptual-model/objects/dates/#griffithcards-representation","title":"GriffithCards representation","text":"<p>The GriffithCards representation uses a very \"card\" specific representation of dates. But one that is broadly task independent.</p> GriffithCards representation of a start date <p></p>"},{"location":"reference/conceptual-model/objects/dates/#assessmenttable-representation","title":"AssessmentTable representation","text":"<p>The AssessmentTable representation is designed for a more specific and less visual purpose.</p> AssessmentTable representation of the same start date <p></p>"},{"location":"reference/conceptual-model/objects/dates/#configure","title":"Configure","text":"<p>The following animated image shows how to use the date tab and the different ways dates can be displayed.</p> Animated demonstration of changing dates <p></p>"},{"location":"reference/conceptual-model/objects/general/","title":"General tab - module configuration element","text":"<p>The general tab is one of four tabs that form the module configuration area. It provides the interface to configure the general properties for a specific module (see below).</p> The \"general tab\" of the module configuration area <p></p>"},{"location":"reference/conceptual-model/objects/general/#properties","title":"Properties","text":"Metadata Description Collection <p>Specify which, if any, of the existing collections this module is allocated to.</p> FYI Objects <p>Specify whether a module is intended as a \"for your information\" object. That is, an object for which students can see information about the module, but not the module itself.</p> <p> Useful if you want students to see details about a module that hasn't yet been released to them.</p> Label &amp; Numbers <p>Explicitly identify (label) a module as a particular object and its position in the collection (the number - which can be auto calculated). For example, Lecture 5 or Assessment item 3</p> Engage <p>Specify if and what text should appear in the module's button when using the Cards representation. </p> Description <p>Some HTML intended to provide a description or rationale for the object represented by the module. To help students understand the purpose, rationale or other aspect of the module.</p>"},{"location":"reference/conceptual-model/objects/general/#collection","title":"Collection","text":"<p>Typically, each module is allocated to one of the existing collections for the course. The general tab provides a drop-down menu of the existing collections. You change the allocated collection by selecting a different collection from the drop-down menu.</p> <p>Unallocated modules will not be visible to students, unless a collection has been configured to include unallocated modules.</p> <p>The following animated image demonstrates how to change the collection for a module and the impact of that change on the Collections' view.</p> Changing the collection for a module <p></p>"},{"location":"reference/conceptual-model/objects/general/#fyi-objects","title":"FYI objects","text":"<p>Normally, Collections' provides a representation of modules that have been published to students. Clicking on the representation will take the student to the Canvas module. There may be times when you wish to provide information about the module (the representation), but not access to the module (e.g. it's unpublished). In this case, you can configure the module as a For Your Information (FYI) object.</p> <p>Selecting the FYI switch on the general tab turns a module into a For Your Information (FYI) object, this means that any representation of the module will:</p> <ol> <li>Always appear regardless of whether the visitor has access (e.g. the module is unpublished); </li> <li>Never include any Canvas information about the module (e.g. a link to the module, whether the module is published or unpublished etc.)</li> <li>Only display information about the module configured by Collections (e.g. the banner, the dates, description, label etc.).</li> </ol> <p>FYI objects and other representations</p> <p>The example below focuses on the GriffithCards representation. All other representations should provide similar support for FYI objects, customised to fit the specifics of the representation.</p> <p>The following tabs provide more detail about and examples of using FYI objects.</p> Common applications of FYI objectsFYI Example Application Description \"Coming soon\" modules Allow students to see information about a module that they can't currently access. Helping them understand the complete structure of the course without being able to access the content. \"Simple information sharing\" You have important information to share and want it integrated into the collection's representation, including use of Collection's other features (e.g. banner, dates, etc). But don't need all the additional features of a module (e.g. items) <p>The following animated image demonstrates how an FYI object can be used with the following steps: </p> <ol> <li>Demonstrate that unpublished modules are not displayed for students.  </li> <li> <p>Modify the unpublished module to make it an FYI object.  </p> <p>Note how the Engage button disappears after this change. FYI object's can't link to the module.</p> </li> <li> <p>Add some an FYI message.</p> <p>A short textual message is added. This is overlaid on the bottom of the banner. Useful for displaying some additional information for the students.</p> </li> <li> <p>Demonstrate how FYI objects are displayed for students.</p> <p>Even though the associated Canvas module is still unpublished, the FYI object is displayed in student view. Note: The module itself remains invisible to students. All they can see is the FYI object containing information you've configured using Collections.</p> </li> <li> <p>Demonstrate the FYI objects don't need a message</p> </li> </ol> <p> Example of creating an FYI object (unpublished module) </p>"},{"location":"reference/conceptual-model/objects/general/#label","title":"Label","text":"<p>The label helps identify a Canvas module as a specific type of object (e.g. Lecture, Workshop, Assignment). It helps them visitors develop a conceptual understanding of why, what, and how to engage with the module/object.</p>"},{"location":"reference/conceptual-model/objects/general/#label-and-numbers","title":"Label and numbers","text":"<p>Often a collection will have multiple modules all representing different objects of the same type (e.g. multiple lectures, or weeks). In this case, it's useful to be able to number the objects of the same type (e.g. Lecture 1, Lecture 2 etc).</p> <p>The general tab provides space for you to specify a label and a number for each module.</p> <p>A label is any sequence of characters (including emojis).</p> <p>There are two options for the number: </p> <ol> <li>Auto-number - the number is automatically calculated based on the order of the modules in the collection. The first lecture will be Lecture 1 the second Lecture 2 and so on.   </li> <li>User specified - i.e. you can manually specify any sequence of characters, including emojis, or leave it blank.</li> </ol> <p>Depending on the representation you've chosen for a collection, the label and number might be used to:</p> <ol> <li>Display the label and number in the module's representation.</li> <li>Modify the module name as shown by the representation (i.e. it may remove the label and number from the module name).</li> </ol> Adding a label and number to three modules <p></p>"},{"location":"reference/conceptual-model/objects/general/#engage","title":"Engage","text":"<p>Card representations can include an Engage button as an explicit affordance for the visitor to click on the card and thereby access the module. </p> <p>The general tab allows you to configure the Engage button by:</p> <ol> <li> <p>Turning the button on or off.</p> <p>Even if the Engage button is turned off, the visitor can still click on a normal card to access the module. (unless it is an FYI object for which the Engage button is always off).</p> </li> <li> <p>Changing the button text.</p> </li> </ol> <p>The following animated image demonstrates the process of configuring the Engage button, including: turning off the Engage button; turning it back on again; changing the label; and, finally returning back to the default.</p> <p>FYI Objects (as shown above) don't have an Engage button</p> Example of changing the \"Engage\" button for a module <p></p>"},{"location":"reference/conceptual-model/objects/general/#description","title":"Description","text":"<p>The description is best used to provide students with additional information about what, why and how they might engage with the activities and information contained by a module. The description is a relative short piece of text entered using a simple visual editor under the description heading of the module configuration area.</p> Adding a description to a couple of modules <p></p>"},{"location":"reference/conceptual-model/objects/metadata/","title":"Metadata tab - the module configuration area","text":"<p>The metadata tab is one of four tabs that form the module configuration area. It provides the interface to add and modify ad hoc metadata variables (name and value) for a specific module (see below).</p> <p>This additional metadata may be used for purposes beyond Canvas Collections. It may also be used by some representations (e.g. the AssessmentTable representation looks for metadata variables by the names learning outcomes and weighting)</p> An example metadata tab <p></p>"},{"location":"reference/conceptual-model/objects/metadata/#properties","title":"Properties","text":"<p>The metadata tab manages a list of metadata variables. Each variable has a name and a value. </p> <p>A metadata variable can only be added if it has both a name and a _value</p>"},{"location":"reference/conceptual-model/objects/metadata/#name","title":"Name","text":"<p>The name of the metadata variable.</p> <p>A variable name cannot include HTML tags and other special characters.</p> <p>Collections will remove these characters from the name and ask if you wish to proceed with the modified name.</p>"},{"location":"reference/conceptual-model/objects/metadata/#value","title":"Value","text":"<p>The value of the metadata variable. An arbitrary string of text.</p> <p>A variable value can include HTML tags and some other special characters.</p> An animated example using the metadata tab to modify variables <p>"},{"location":"reference/conceptual-model/objects/overview/","title":"Objects","text":""},{"location":"reference/conceptual-model/objects/overview/#transforming-vanilla-canvas-modules-into-design-specific-objects","title":"Transforming vanilla Canvas modules into design specific objects","text":"<p>Canvas modules only provide the information and functionality provided by vanilla Canvas. There is little or no explicit method for adding more context or design specific information. Hence modules remain modules.</p> <p>Canvas Collections provides the module configuration area as a space where you can provide more design and context specific information about a module. Transforming it from a vanilla Canvas module into a design specific object. Consequently, making it easier for course participants to understand the conceptual model underpinning your course design. Better understand how, when, and what they should be doing with these objects (Canvas modules).</p>"},{"location":"reference/conceptual-model/objects/overview/#the-module-configuration-area","title":"The Module Configuration area","text":"<p>With Collections installed and Edit on each Canvas module will have its own Collections' module configuration area. This is how you add and modify the additional design specific data. The animated image below shows what this looks like.</p> <p>The Module Configuration area is divided into a number of tabs. The following table summarises the purpose of each tab. The links below are to pages that provide more detailed information about each tab and how it works.</p> Tab Description General <p>Configure general metadata, including: description, collection allocation, label, FYI, engage.</p> Dates <p>Specify the date or date period that applies to a module.</p> Banner <p>Configure the banner (image, colour, or iframe) for a module.</p> Metadata <p>Provide and modify additional metadata beyond Collections specific metadata. Used by some representations.</p> Finding the module configuration areas <p></p>"},{"location":"reference/conceptual-model/objects/url-canvas-files-image/","title":"Url canvas files image","text":""},{"location":"reference/conceptual-model/objects/url-canvas-files-image/#using-a-canvas-file-image-as-a-banner","title":"Using a Canvas file image as a banner","text":"<p>The Canvas Collections image banner requires a URL to an image. This image can be hosted externally (e.g. on the open web), or it can be hosted in the Canvas files area of your Canvas course site.</p> <p>Here's how to generate a URL for an image in your Canvas course site's files area.</p>"},{"location":"reference/conceptual-model/objects/url-canvas-files-image/#1-upload-an-image-to-your-canvas-course-sites-files-area","title":"1. Upload an image to your Canvas course site's files area","text":"<p>Use the Canvas community instructions for uploading files to upload the image.</p> <p>Create a folder for all your Collections images</p> <p>It can make organisation easier if you create a folder in your Canvas course site's files area to store all your Collections images.</p>"},{"location":"reference/conceptual-model/objects/url-canvas-files-image/#2-click-on-the-three-dots-menu-for-the-uploaded-image","title":"2. Click on the \"three dots\" menu for the uploaded image","text":"<p>Once the image is uploaded, </p> <ol> <li>View the folder containing the image.</li> <li>Hover your mouse over the specific image.</li> <li>Click on the \"three dots\" menu that appears (see image below).</li> </ol> <p></p> Clicking on the \"three dots\" menu for the uploaded image"},{"location":"reference/conceptual-model/objects/url-canvas-files-image/#3-copy-the-download-url-for-the-image","title":"3. Copy the \"download\" URL for the image","text":"<p>Now you can obtain a download link for the image, by</p> <ol> <li>Hover over the \"download\" option in the \"three dots\" menu (see image above).</li> <li>Open your browser's contextual menu by right or ctrl clicking</li> <li>Click on the \"copy link\" or equivalent option in the contextual menu.</li> </ol> <p>This will copy the \"download\" URL for the image into your computer's clipboard.</p> <p></p> Copying the image download URL"},{"location":"reference/conceptual-model/objects/url-canvas-files-image/#4-paste-the-download-link-into-the-banner-image-url","title":"4. Paste the \"download\" link into the banner image URL","text":"<p>With Collections' \"edit mode\" turned on:</p> <ol> <li>Find the module configuration element.</li> <li>Open the banner tab</li> <li>Paste the \"download\" link into the banner image URL (see image below).</li> </ol> <p></p> Paste the \"download\" link into the banner image URL"},{"location":"reference/conceptual-model/representations/assessment-table/","title":"Assessment Table","text":""},{"location":"reference/conceptual-model/representations/assessment-table/#assessmenttable","title":"AssessmentTable","text":""},{"location":"reference/conceptual-model/representations/assessment-table/#what-does-it-look-like","title":"What does it look like?","text":"<p>Rather than representing each module as a card, the AssessmentTable representation represents each module as the row in table. A table designed explicitly for summarising the assessment for a course.  The properties section below provides more detail on the displayed columns.</p> <p>The following animated image shows the same vanilla Canvas course, but using the AssessmentTable representation. The first module of the Why? collection has been configured with metadata for weighting and learningOutcomes and this information is displayed. None of the modules for the What? and How? collections have learningOutcomes, hence that column is not visible for these collections. </p> Collections enabled modules page showing the assessment table representation <p></p>"},{"location":"reference/conceptual-model/representations/assessment-table/#properties-columns","title":"Properties (columns)","text":"<p>The columns of the AssessmentTable representation (Title, Description, Weighting, Due Date, and Learning Outcomes) are populated from various properties of the allocated modules.</p> <p>Not all columns, all the time</p> <p>If none of the modules have defined the weighting and learning outcomes properties, then those columns will not appear to students.</p>"},{"location":"reference/conceptual-model/representations/assessment-table/#title","title":"Title","text":"<p>The title column is taken directly from the name of the module. </p> <p>The intent is that the module name represents the title of the assessment task students need to complete.</p>"},{"location":"reference/conceptual-model/representations/assessment-table/#description","title":"Description","text":"<p>The description column is taken from the standard Canvas Collections description property. </p> <p>The intent is that the description provides students with some  additional high-level information about the assessment task.</p>"},{"location":"reference/conceptual-model/representations/assessment-table/#due-date","title":"Due Date","text":"<p>The Due Date column is taken from the standard Canvas Collections dates property.</p> <p>The intent being to provide the student some indication of the due date for the assessment task.</p>"},{"location":"reference/conceptual-model/representations/assessment-table/#weighting-and-learning-outcomes","title":"Weighting and Learning Outcomes","text":"<p>The Weighting and Learning Outcomes columns are specific to the AssessmentTable representation. They are populated using Canvas Collections' metadata feature. The table below shows the metadata names and example values for the Weighting and Learning Outcomes columns.</p> <p>The intent being to provide students with additional important information about the assessment task.</p> Metadata Name Example Value <code>learning outcomes</code> 1, 2, 3 <code>weighting</code> 10% Sample AssessmentTable show meta data values for first module <p></p>"},{"location":"reference/conceptual-model/representations/collections-only/","title":"Collections Only","text":""},{"location":"reference/conceptual-model/representations/collections-only/#collections-only","title":"Collections Only","text":"<p>The following animated image shows the same vanilla Canvas course configured with Canvas Collections so that its 13 modules are organised into three collections: Why?, What?, and How?. </p> <p>In this example, each collection is using the Collections Only representation. This is the bare minimum Collections' representation, which modifies the Canvas modules page to include:</p> <ol> <li> <p>The collection's navigation bar (hence the name, Collections Only).</p> <p>This is how you navigate between collections.</p> </li> <li> <p>Any Include Pages configured for the collection.</p> <p>The Why? collection includes some text (A little bit of an include page -- one one 111) after the collection's navigation bar. This is the content of a Canvas page that has been configured as an Include Page for the collection.</p> </li> <li> <p>The modules belonging to the current collection.</p> <p>This is the standard Canvas Modules view, however, when viewing a collection you will only see the modules that belong to the current collection.</p> </li> </ol> <p>The above three elements are the bare minimum changes that Collections (when turned on) makes to the Canvas Collections page. The remaining </p> Modules page with Collections, but not representations <p></p>"},{"location":"reference/conceptual-model/representations/griffith-cards/","title":"Griffith Cards","text":""},{"location":"reference/conceptual-model/representations/griffith-cards/#griffithcards","title":"GriffithCards","text":"<p>The following animated image shows the same vanilla Canvas course with the same collections as the previous example. However, this time the GriffithCards representation is being used. This representation generates a card for each object (aka Module) that belongs to the collection. It mirrors the widely used card UI design pattern. </p> <p>Everything else (e.g. the navigation bar, include pages, and the modules belonging to the collection) is the same</p> <p>The card component can help transform the vanilla Canvas module into a design and context specific object by displaying additional attributes, including (but not limited to): a textual description; a label and sequence number; associated dates; and, a card image.</p> Collections using the Griffith Cards representation <p></p>"},{"location":"reference/conceptual-model/representations/griffith-cards/#progress-ring","title":"Progress ring","text":"<p>Canvas module requirements are used to track what module items a student has completed. To complete the module students must complete all the requirements.</p> <p>GriffithCards can add a progress ring to each card representing a module. The progress ring provides a visual representation of the percentage of a module's requirements a student has completed. Fro example, the following animated image demonstrates </p> <ul> <li>the visual design of the GriffithCards progress ring.</li> <li>the presence of a tooltip that allows students to hover over the progress ring to see a summary of # of requirements completed and the total number to be completed.</li> <li>how the progress ring is updated when a student completes a requirement.</li> </ul> <p>Use student view to see the progress ring</p> <p>Teacher or designer views will not show the progress ring, unless student view is used.</p> Example of GriffithCards' progress ring for tracking student completion <p></p>"},{"location":"reference/conceptual-model/representations/horizontal-cards/","title":"Horizontal Cards","text":""},{"location":"reference/conceptual-model/representations/horizontal-cards/#horizontalcards","title":"HorizontalCards","text":"<p>As shown below, the HorizontalCards representation is related to GriffithCards representation. One card per module. Very similar components available to each card. </p> <p>The main differences being </p> <ol> <li>The cards are displayed one per row; and,</li> <li>HorizontalCards does not require any external CSS when used in Claytons collections.</li> </ol> Collections enabled modules page showing the HorizontalCards representation <p></p>"},{"location":"reference/conceptual-model/representations/overview/","title":"Representations","text":"<p>Representations control how an individual collection is displayed.  The currently available representations are listed in the table and explained in more detail on the relevant pages. </p> <p>Representations for a given collection can be changed at any time. New representations can be developed and added.</p>"},{"location":"reference/conceptual-model/representations/overview/#current-representations","title":"Current representations","text":"Name Description CollectionsOnly The bare minimum representation. The vanilla Canvas Modules page is modified by adding: 1) the Collections navigation bar; 2) any include pages; and, 3) showing only modules belonging to the current collection. GriffithCards Builds on CollectionsOnly by adding a card component for each module belonging to the current collection. The card component includes a number of additional features to transform the generic Canvas module into a design and context specific object. AssessmentTable Rather than a card, each module is represented by a row in a table. The table is designed to summarises assessment for a course with columns for weighting and learning outcomes. HorizontalCards A variation on GriffithCards where there is a single column of horizontal cards. One for each module. Specially designed to function in Claytons mode without any external CSS. Early release version"},{"location":"reference/conceptual-model/representations/overview/#vanilla-canvas","title":"Vanilla Canvas","text":"<p>The vanilla Canvas Modules page shows a linear list of all the modules in a course (for students all the published modules). The following animated image shows the Modules page for a sample Canvas course containing 13 modules. </p> <p>This same course is used in the demonstrations for the other representations.</p> Vanilla Canvas Modules (no Collections) <p></p>"},{"location":"reference/conceptual-model/representations/claytons/overview/","title":"\"Claytons\" Collections","text":""},{"location":"reference/conceptual-model/representations/claytons/overview/#why-and-what","title":"Why and what?","text":"<p>Canvas Collections is able to modify the default Canvas modules view to provide a more useful and engaging experience for students and teachers. There are two ways Canvas Collections can make this modification:</p>"},{"location":"reference/conceptual-model/representations/claytons/overview/#live-canvas-collections","title":"'Live' Canvas Collections","text":"<p>The standard \"live\" version of Canvas Collections requires that you have installed the Collections code - either individually or institutionally. This code runs and updated the Canvas modules view as you are watching (i.e. live). </p> <p>If you or your students are unable to install the Collections code, then you can use the \"Claytons\" Collections to create a similar experience.</p>"},{"location":"reference/conceptual-model/representations/claytons/overview/#claytons-canvas-collections","title":"'Claytons' Canvas Collections","text":"<p>\"Claytons\" Collections is the Collections you have when you're not having Collections (a play on a marketing campaign for a drink). It's a way for one person to install and use 'live' Collections to create normal Canvas pages that contains the Collections visual representation. As a Canvas page, this can be viewed without the Collections code.</p> <p>It is a way of semi-automating common advice from the Canvas community to manually create pages to workaround the limitations of Canvas' module view. Some examples of that advice, include: create full navigation using pages, create an inviting course home page, and home sweet home pages without tables.</p> <p>Some 'Claytons' representations require external CSS</p> <p>The Canvas Rich Content Editor (RCE) places limitations on the CSS/HTML that can be used in a Canvas page. These limitations constrain what can be achieved visually. Either directly or via Claytons.</p> <p>A solution to this is to use external CSS files. There are two common ways to achieve this</p> <ol> <li>Canvas Theme Editor.</li> <li>Use of an external tool (e.g. Design Plus from CIDI Labs)</li> </ol> <p>Both require Canvas admin access.</p>"},{"location":"reference/conceptual-model/representations/claytons/overview/#how-does-it-work","title":"How does it work?","text":"<p>There are two steps to using \"Claytons\" Collections:</p> <ol> <li> <p>Specify an  output page for any of the existing collections .</p> </li> <li> <p>Update the output page for your collection.</p> </li> </ol> <p>Updating the contents of an output page is a manual process</p> <p>Any changes you make using Canvas Collections are not automatically reflected in the output page. You will need to manually update the output page to see the changes. There are two different ways to update an output page: </p> <ol> <li>update the output page for a single collection; or, </li> <li>update the output page for all collections (Full Claytons).</li> </ol>"},{"location":"reference/conceptual-model/representations/claytons/overview/#what-does-it-do-to-existing-content-in-an-output-page","title":"What does it do to existing content in an output page?","text":"<p>Collections recognises two different situations, depending on whether or not the output page:</p> <ol> <li> <p>does not already contain a Claytons content for the given collection; or,</p> <p>Collections will place the collection's content after any existing content on the page.  2. already contains Claytons content for the given collection. </p> <p>Collections will replace the old Claytons content with the latest version.</p> </li> </ol> <p>Collections does not modify or remove any non-Collection content.</p>"},{"location":"reference/conceptual-model/representations/claytons/overview/#can-an-output-page-be-used-by-more-than-one-collection","title":"Can an output page be used by more than one collection?","text":"<p>Yes.</p> <p>A single Canvas page can be an output page for a single collection or multiple collections.</p> <p>If an output page is used by multiple collections, then the content of all the collections will be added to the output page. How this works will depend on the chosen navigation option.</p>"},{"location":"reference/conceptual-model/representations/claytons/overview/#update-all-collections-full-claytons","title":"Update all Collections (Full Claytons)","text":"<p>The \"Full Claytons\" option provides two advantages over the \"single\" update method:</p> <ol> <li> <p>Update all collections with output pages at once.</p> <p>Rather than do a single update for each collection, Full Claytons updates all relevant output pages at once.</p> </li> <li> <p>Add navigation options between collections.</p> <p>As well as updating the output pages with the current content of the collections, Full Claytons can also be configured to add a Collections navigation bar to help the user change between collections. There are three navigation options summarised below.</p> </li> </ol> <p>The following image demonstrate using the Full Claytons functionality to: </p> <ol> <li>Update three collections at one time, all to the one output page.</li> <li>Add the <code>Tabs</code> navigation option to that output page.</li> </ol> <p>The process shown, includes:</p> <ol> <li>Showing the existing state of the output page (the content generated by the previous animated image).</li> <li>Move to the Modules page and show that all three collections have been configured to use the same output page.</li> <li>Change the Navigation Bar Option to <code>Tabs</code>.</li> <li>Hit the Full Claytons update button.</li> <li>Step through all the alert boxes generated to show progress.</li> <li>Change back to the output page and reload it to see the updated content.</li> <li>Use the <code>Tabs</code> navigation to navigate between the different collections all visible on the same page.</li> </ol> <p>The next animated image demonstrates the use of Full Claytons using the other two navigation bar options.</p> Creating a visual home page using full Claytons <p></p>"},{"location":"reference/conceptual-model/representations/claytons/overview/#navigation-bar-options","title":"Navigation bar options","text":"<p>Navigation options are intended to help the user navigate between different Collections. There are three navigation options - summarised in the following table.</p> Navigation Option Description <code>None</code> No navigation interface is added to any of the output pages. Any existing navigation interface is removed <code>Pages</code> Only works when each collection has a different output page. A navigation bar is added to each page, before each collection, to allow the user to navigate between the different collections. <code>Tabs</code> Only works when an output page contains multiple collections. A tabbed navigation interface is added so that only one collection is visible at a time. The interface allows users to switch to a different collection on the same page. <p>The following animated image demonstrates the use of Full Claytons to change between different navigation options, and in doing so demonstrates the <code>Pages</code> and <code>None</code> options. The process shown, includes:</p> <ol> <li>Showing an existing output page that used the \"update page\" option (it has not navigation option).</li> <li>Moving other Modules page and opening the Collections configuration area.</li> <li>Making changes so that each collection has a different output page.</li> <li>Changing the Navigation Bar Option to <code>Pages</code> and performing a Full Claytons update.</li> <li>Stepping through the alerts showing the progress of the update.</li> <li>Changing back to the original output page and reloading to show the addition of the navigation bar and any other changes.</li> <li>Using the <code>Pages</code> navigation bar to navigate between different collections which are located on different pages.</li> <li>Moving back to the Modules page and changing the output configuration so all collections are using the same output page</li> <li>Changing the navigation option to the <code>None</code> option and performing a Full Claytons update.</li> <li>Stepping through the alert boxes showing the progress of the update.</li> <li>Changing back to the original to show that the <code>Page</code> navigation has been removed and that all of the collection's content is now on the same page without any navigation bar.</li> </ol> <p></p>"},{"location":"reference/development/component-structure/","title":"Component Structure","text":"<p>Canvas Collections is written using the Svelte framework. One implication of this is that Collections is implemented as a collection of individual components working together. The following provides an overview of the structure and relationships between those components.</p>"},{"location":"reference/development/component-structure/#canvascollectionssvelte","title":"CanvasCollections.svelte","text":"<p>Ancestor app. Responsible for setting up the Collections box in the top menu (if it should be turned on)</p> <p>Responsible to obtain data from Canvas (canvas modules and collections config). Initialises the stores used by others.</p> <p> </p>"},{"location":"reference/development/component-structure/#collectionsconfiguration","title":"CollectionsConfiguration","text":""},{"location":"reference/development/component-structure/#newcollections","title":"NewCollections","text":""},{"location":"reference/development/component-structure/#fullclaytons","title":"FullClaytons","text":""},{"location":"reference/development/component-structure/#existingcollections","title":"ExistingCollections","text":"<p>A sequence of <code>CollectionConfigurations</code>, one for each of the existing collections</p>"},{"location":"reference/development/component-structure/#collectionconfiguration","title":"CollectionConfiguration","text":""},{"location":"reference/development/component-structure/#canvascollectionsrepresentation","title":"CanvasCollectionsRepresentation","text":"<p>Populates the representation, consisting of a navBar, any include pages, and the collections' representation</p>"},{"location":"reference/development/component-structure/#collectionsnavigation","title":"CollectionsNavigation","text":""},{"location":"reference/development/component-structure/#includepage","title":"IncludePage","text":""},{"location":"reference/development/component-structure/#collectionrepresentation","title":"CollectionRepresentation","text":""},{"location":"reference/development/component-structure/#collectiononly","title":"CollectionOnly","text":""},{"location":"reference/development/component-structure/#assessmenttable","title":"AssessmentTable","text":""},{"location":"reference/development/component-structure/#collectionstable","title":"CollectionsTable","text":""},{"location":"reference/development/component-structure/#griffithcards","title":"GriffithCards","text":""},{"location":"reference/development/component-structure/#moduleconfiguration","title":"ModuleConfiguration","text":"<p>Implements the configuration interface for each Canvas module. Inserted just after the Canvas module's bar on the module page.</p>"},{"location":"reference/development/component-structure/#modulegeneralconfiguration","title":"ModuleGeneralConfiguration","text":""},{"location":"reference/development/component-structure/#moduledateconfiguration","title":"ModuleDateConfiguration","text":""},{"location":"reference/development/component-structure/#modulebannerconfiguration","title":"ModuleBannerConfiguration","text":""},{"location":"reference/development/component-structure/#modulemetadataconfiguration","title":"ModuleMetaDataConfiguration","text":""},{"location":"reference/development/config-format/","title":"Canvas Collections configuration page","text":"<p>:under_construction: This page is under construction. It is intended to provide a reference for the JSON configuration file used by Canvas Collections.</p>"},{"location":"reference/development/config-format/#where","title":"Where","text":"<p>The configuration details of Canvas Collections for a specific course is stored in a Canvas page called <code>Canvas Collections Configuration</code>. It contains a <code>div</code> element with the class <code>cc_json</code> which contains a JSON data structure containing the Collections configuration.</p> Example \"Canvas Collections Configuration\" page <p></p>"},{"location":"reference/development/config-format/#introducting-the-collections-configuration-json","title":"Introducting the Collections configuration JSON","text":""},{"location":"reference/development/config-format/#about-json","title":"About JSON","text":"<ul> <li>explain about JSON file format - link to an explanation</li> <li>explain about json editors</li> </ul>"},{"location":"reference/development/config-format/#top-level-attributes","title":"Top level attributes","text":"<p>The configuration file defines a number of attributes which control how Canvas Collections behaves. Currently the top level attributes include:</p> <ul> <li><code>VISIBILITY</code> - Who can see Collection: no-one, students, staff, all</li> <li><code>DEFAULT_ACTIVE_COLLECTION</code> - Which collection is shown initially for each user?</li> <li><code>COLLECTIONS</code> - What collections are modules grouped into? How are they represented?</li> <li><code>MODULES</code> - How are each of the modules to be represented?</li> </ul> <p>The following sections explain the configuration for each of these attributes</p> <p>-- link to a complete example JSON file that includes the following</p>"},{"location":"reference/development/config-format/#visibility","title":"<code>VISIBILITY</code>","text":""},{"location":"reference/development/config-format/#default_active_collection","title":"<code>DEFAULT_ACTIVE_COLLECTION</code>","text":"<pre><code>\"DEFAULT_ACTIVE_COLLECTION\":\"Learning Journey\",\n</code></pre>"},{"location":"reference/development/config-format/#collections","title":"<code>COLLECTIONS</code>","text":"<pre><code>\"COLLECTIONS\": {\n    \"Learning Journey\": {\n        \"representation\": \"GriffithCards\",\n        \"description\" : \"\",\n        \"icon\" : \"far fa-compass\"\n    },\n    \"Assessment\": {\n        \"representation\": \"GriffithCards\",\n        \"description\" : \"\",\n        \"icon\" : \"icon-assignment\"\n    }\n}\n</code></pre>"},{"location":"reference/development/config-format/#modules","title":"<code>MODULES</code>","text":"<pre><code>\"MODULES\": {\n    \"Welcome and Getting Started\": {\n        \"name\": \"Welcome and Getting Started\",\n        \"image\": \"https://www.webwisewording.com/wp-content/uploads/aaron-burden-AvqpdLRjABs-unsplash.jpg\",\n        \"label\": \"\",\n        \"imageSize\": \"bg-contain\",\n        \"num\": \"\",\n        \"description\": \"&lt;p&gt;Why, how and what you will be learning in this course? How wil you demonstrate your learning? How will you be supported?\",\n        \"collection\": \"Learning Journey\",\n        \"comingSoon\": {\n            \"date\": {\n                \"week\": \"4\"\n            },\n            \"order\": 1\n        },\n        \"date\": {\n            \"label\": \"Before\",\n            \"week\": \"1\"\n        }\n    },\n    \"COM31 FAQs\": {\n        \"image\": \"https://www.ticliblaxland.com.au/wp-content/uploads/2020/11/UDIN.jpeg\", \n        \"collection\": \"Learning Journey\",\n        \"label\": \"\",\n        \"num:\": \"\",\n        \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus in imperdiet nisi. Etiam non blandit ante. Integer ullamcorper eros nibh. Integer porta, est a porta finibus, turpis nisl semper elit, sed convallis neque ipsum ac ex.\"\n    }\n}\n</code></pre>"},{"location":"reference/development/data-structures/","title":"Data Structures","text":""},{"location":"reference/development/data-structures/#collections-data-structures","title":"Collections data structures","text":""},{"location":"reference/development/data-structures/#collections-canvas-module-object","title":"Collections Canvas module object","text":"<p>Collections provides the function <code>getRepresentationModules</code> which when given the name of a collection and some other parameters will return an array of objects. The array contains one object for each module belonging to the nominated collection. Each object contains basic Canvas specific information about a single module. The following is one example.</p> <pre><code>{\n    \"id\": 1,\n    \"name\": \"\ud83e\udd14 Reason 1: Improve Canvas' organisation of course content\",\n    \"position\": 1,\n    \"unlock_at\": null,\n    \"require_sequential_progress\": false,\n    \"publish_final_grade\": false,\n    \"prerequisite_module_ids\": [],\n    \"published\": true,\n    \"items_count\": 9,\n    \"items_url\": \"http://canvas.docker/api/v1/courses/1/modules/1/items\"\n}\n</code></pre>"},{"location":"reference/development/data-structures/#collectionsstore","title":"<code>$collectionsStore</code>","text":"<p>Collections maintains a Svelte store called <code>$collectionsStore</code>. An object that contains all of the additional Collections information.  The following is an edited example. The table provides a summary of the major components of the object.</p> Component Description DEFAULT_ACTIVE_COLLECTION The name of the first collection new visitors should see COLLECTIONS A collection of objects, one for each collection. Keyed on the name of the collections. COLLECTIONS_ORDER An array specifying the order in which collections are displayed MODULES A collection of objects, one for each module in the course. Contains all the Collections specific data about a module. Keyed on the Canvas module id NEED_TO_SAVE_COLLECTIONS Boolean indicating whether there are unsaved changes to the collections store VISIBILITY String containg details of who is able to see Collections <pre><code>{\n    \"DEFAULT_ACTIVE_COLLECTION\": \"Why?\",\n    \"COLLECTIONS\": {\n        \"What?\": {\n            \"representation\": \"GriffithCards\",\n            \"outputPage\": \"New Home Page\",\n            \"name\": \"What?\",\n            \"hide\": false,\n            \"includePage\": \"test page\",\n            \"includeAfter\": false,\n            \"unallocated\": false\n        },\n        \"How?\": {\n            \"representation\": \"CollectionOnly\",\n            \"outputPage\": \"New Home Page\",\n            \"includePage\": \"test page\",\n            \"unallocated\": false,\n            \"includeAfter\": false,\n            \"hide\": false\n        },\n        \"Questions &amp; Suggestions\": {\n            \"name\": \"Questions &amp;amp; Suggestions\",\n            \"representation\": \"CollectionOnly\",\n            \"outputPage\": \"New Home Page\",\n            \"hide\": false,\n            \"includePage\": \"Questions\",\n            \"includeAfter\": false,\n            \"unallocated\": false\n        },\n        \"Why?\": {\n            \"representation\": \"HorizontalCards\",\n            \"outputPage\": \"New Home Page\",\n            \"name\": \"Why?\",\n            \"includePage\": \"test page\",\n            \"includeAfter\": false,\n            \"unallocated\": false,\n            \"hide\": false,\n            \"undefined\": \"xxxx\"\n        }\n    },\n    \"COLLECTIONS_ORDER\": [\n        \"Why?\",\n        \"What?\",\n        \"How?\",\n        \"Questions &amp; Suggestions\"\n    ],\n    \"MODULES\": {\n        \"1\": {\n            /** see the modules object detail in the following section */\n        },\n        \"2\": {\n        },\n        \"3\": {\n        },\n        \"4\": {\n        },\n        \"5\": {\n        },\n        \"6\": {\n        },\n        \"7\": {\n        },\n        \"8\": {\n        },\n        \"9\": {\n        },\n        \"10\": {\n        },\n        \"11\": {\n        },\n        \"12\": {\n        },\n        \"13\": {\n        },\n        \"14\": {\n        }\n    },\n    \"NEED_TO_SAVE_COLLECTIONS\": true,\n    \"VISIBILITY\": \"all\"\n}\n</code></pre>"},{"location":"reference/development/data-structures/#collections-module-object","title":"Collections module object","text":"<pre><code>{\n    \"name\": \"\ud83e\udd14 Reason 1: Improve Canvas' organisation of course content\",\n    \"id\": 1,\n    \"collection\": \"Why?\",\n    \"description\": \"&lt;p&gt;What are the\u00a0 limitations of Canvas' module view? How does Collections help?\u00a0&lt;/p&gt;\\n\",\n    \"label\": \"\ud83e\udd14 Reason\",\n    \"image\": \"https://www.memecreator.org/static/images/memes/4983581.jpg\",\n    \"autonum\": true,\n    \"imageSize\": \"contain\",\n    \"engage\": true,\n    \"engageText\": \"Engage\",\n    \"actualNum\": 1,\n    \"configClass\": \"icon-mini-arrow-down\",\n    \"banner\": \"image\",\n    \"fyi\": false,\n    \"fyiText\": \"\",\n    \"bannerColour\": \"#d04602\",\n    \"iframe\": \"&lt;iframe src=\\\"https://www.youtube.com/embed/UlFNy9iWrpE\\\" title=\\\"YouTube video player\\\" frameborder=\\\"0\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\\" allowfullscreen&gt;&lt;/iframe&gt;\",\n    \"activeDate\": \"start\",\n    \"configDisplay\": {\n        \"accordions\": {\n            \"dates\": \"\",\n            \"banner\": \"open\",\n            \"metadata\": \"\"\n        }\n    },\n    \"date\": {\n        \"label\": \"During\",\n        \"day\": \"Mon\",\n        \"week\": \"2\",\n        \"time\": \"\",\n        \"to\": {\n            \"day\": \"Fri\",\n            \"week\": \"3\",\n            \"time\": \"\",\n            \"date\": \"28\",\n            \"month\": \"Jul\",\n            \"year\": \"2023\",\n            \"calendarDate\": \"2023-07-28\"\n        },\n        \"date\": \"10\",\n        \"year\": \"2023\",\n        \"month\": \"Jul\",\n        \"calendarDate\": \"2023-07-10\"\n    },\n    \"configVisible\": true,\n    \"metadata\": {\n        \"learning outcomes\": \"1, 2, 3\",\n        \"weighting\": \"50%\"\n    },\n    \"publish_final_grade\": false,\n    \"imageBackgroundColour\": true,\n    \"moduleOrder\": 1,\n    \"dateShow\": {\n        \"day\": true,\n        \"week\": true,\n        \"time\": false,\n        \"calendarDate\": true,\n        \"label\": false,\n        \"date\": true,\n        \"month\": true,\n        \"toDate\": true,\n        \"toMonth\": true,\n        \"toDay\": true\n    },\n    \"published\": true\n}\n</code></pre>"},{"location":"reference/development/development-overview/","title":"Overview","text":""},{"location":"reference/development/development-overview/#development-overview","title":"Development overview","text":"<p>Currently available documentation for developing Canvas Collections is summarised in the table below and available on subsequent pages.</p> Topic/Page Description Local Development How to build (and modify) your own version of Canvas Collections Develop a representation Process and example of developing a new representation Configuration page Explanation of how and where Collections saves configuration information for each Canvas course site Component structure A very incomplete, initial description of the Svelte components that make up Canvas Collections Data structures Early description of the major data structures used by Canvas Collections"},{"location":"reference/development/local-development/overview/","title":"Local development - overview","text":"<p>If you're looking to build or modify your own version of Canvas Collections you will need to set up and use a local development environment.</p>"},{"location":"reference/development/local-development/overview/#pre-requisite-knowledge","title":"Pre-requisite Knowledge","text":"<p>Currently, local development and testing takes place using a <code>dev</code> version of a Collections userscript. It can be quickly modified, tested, and modified again.</p> <p>To use current practice and understand the following, you will likely need to be fairly familiar with using</p> <ul> <li>GitHub - to clone this code</li> <li><code>npm</code> - to install various dependencies</li> <li>TamperMonkey and the idea of userscripts - for running dev versions of Collections</li> <li>Chrome - live dev works best with Chrome</li> <li>Svelte and JavaScript development in general</li> </ul> <p>Not a lot of detail, yet</p> <p>The following provides only the bare bones explanation of what is required to set up a local development environment for Canvas Collections.</p>"},{"location":"reference/development/local-development/overview/#setting-up-your-collections-local-development-environment","title":"Setting up your Collections local development environment","text":"<p>This is the initial process required to commence development.</p>"},{"location":"reference/development/local-development/overview/#1-get-a-copy-of-the-code-and-necessary-external-libraries","title":"1. Get a copy of the code and necessary external libraries","text":"<ul> <li> <p>1.1 Clone the Canvas Collections repository (repo)</p> <p>See GitHub's cloning a repository documentation</p> </li> <li> <p>1.2 <code>npm install</code></p> <p>You may need to download and install Node.js and npm</p> </li> <li> <p>1.3 Take note of the full File URI for the <code>dev</code> folder within the Collections repository on your computer.</p> <p>This is required for a later step</p> </li> </ul>"},{"location":"reference/development/local-development/overview/#2-set-up-local-userscript-development-for-your-browser","title":"2. Set up local userscript development for your browser","text":"<p>Using Chrome and a very particular method</p> <p>To ensure live updating of the Collections userscript, the following recommends using a combination of the Chrome browser and Tampermonkey. It uses the </p> <p>The approach used is based on this Tampermonkey Svelte Template - see that repo for more details.</p> <ul> <li> <p>2.1 Install TamperMonkey on your Chrome browser</p> </li> <li> <p>2.2 Enable the `Allow access to file URLs\" setting in the Chrome extension settings for TamperMonkey.</p> <p>Help on how to change Chrome extension settings</p> </li> <li> <p>2.3 Click on this dev user script link to install the dev userscript using TamperMonkey </p> </li> <li> <p>2.4 Modify the dev user script to use File URIs for your set up.</p> <p>The dev userscript includes lines with <code>@require</code> and <code>@resource</code>. These inform the userscript where to retrieve files from. These need to be modified to use the File URI for your computer (see 1.3 above). For example, the following includes a File URI for my local development.:</p> </li> </ul> <pre><code>// @resource    css file:///C:/Users/djones/code/svelte/canvas-collections/dev/canvas-collections.css\n// @require     file:///C:/Users/djones/code/svelte/canvas-collections/dev/canvas-collections.js\n</code></pre>"},{"location":"reference/development/local-development/overview/#using-your-local-collections-development-environment","title":"Using your local Collections development environment","text":"<p>Once the setup process (above) is complete you can commence development.</p> <ul> <li> <p>1.1 Start the development server</p> <p><code>npm run dev</code> - will start a development server with hot reloading.</p> <p>As you save changes to the Collections source code, it will generate new versions of the Canvas Collections <code>css</code> and <code>js</code> files in the <code>dev</code> folder.</p> </li> <li> <p>1.2 Visit the Modules page of a Canvas course site with the Chrome browser</p> <p>Perform the \"is it installed\" check to see if Collections is working.</p> </li> <li> <p>1.3 Reload the Modules page after any changes to the Collections code.</p> </li> </ul>"},{"location":"reference/development/local-development/overview/#building-production-code-with-your-local-collections-development-environment","title":"Building production code with your local Collections development environment","text":"<p><code>npm run build</code> will build two \"production\" versions of Canvas Collections in the <code>dist</code> folder, including</p> <ol> <li><code>canvas-collections.user.js</code> - production userscript that can be used by individual teachers/designers to experiment with Canvas Collections (use the \"raw\" version)</li> <li><code>canvas-collections.js</code> (and <code>canvas-collection.css</code>) - production version of Canvas Collections that can be loaded into the Canvas themes editor </li> </ol> <p><code>live-canvas-collections.js</code> can be loaded into the Canvas themes editor to install Canvas Collections.  It's one example and relies upon a CDN version of the production code.</p>"},{"location":"reference/development/representations/representation-development/","title":"Develop a representation","text":""},{"location":"reference/development/representations/representation-development/#developing-a-new-representation","title":"Developing a new representation","text":"<p>An example of one process for developing a new representation. Illustrated using the development of the HorizontalCards representation as an example. Steps summarised in the following table and expanded below.</p> <p>Once finished your representation, you may want to consider contributing it back to the Collections community</p> Step Description 1. Design the representation Have some idea of the aim and what it will look like using standard HTML design tools. Don't go anywhere near Collections to start. 2. Test in the RCE Especially if you wish to implement a Claytons version, which is restricted to the list of HTML/CSS allowed by the Canvas RCE. 3. Add the skeleton representation component Modify and re-build the Collections source code to have a version of your representation that doesn't yet do anything. 4. Refine it Step through the process of turning the skeleton component into something functional 5. Add the Claytons version Modify the original work to provide the option of a purpose designed Claytons version 6. Test it The on-going process to test and refine your representation <p>maybe give overview of the steps, in a table??</p>"},{"location":"reference/development/representations/representation-development/#1-design-the-representation","title":"1. Design the representation","text":""},{"location":"reference/development/representations/representation-development/#why-inspiration","title":"Why? Inspiration?","text":"<p>There are situation where \"live\" Collections cannot be installed nor can any external CSS. Meaning course design is limited by the Canvas RCE.</p> <p>The HorizontalCard representation aims to provide a visual (not tabular) representation that can easily used with Claytons collections. That is, static HTML that can work in the Canvas RCE without requiring any external CSS files. </p> <p>Within that constraint the aim is that a single collection's modules can be represented using a vertical sequence of horizontal \"cards\", each card containing some/all of</p> <ul> <li>a banner image/iframe</li> <li>a header with module name</li> <li>the module label/number displayed appropriately</li> <li>module dates displayed visually</li> <li>the module description</li> </ul>"},{"location":"reference/development/representations/representation-development/#design","title":"Design","text":"<p>If you're lucky you are (have access to) a designer. Saving that borrow inspiration from wherever you can find it. i.e. the approach used here.</p> <p>Here's the initial set of designs of the HorizontalCard representation.  Given the aim to be Claytons friendly, the initial designs have focused on that and hence don't take full advantage of some CSS capabilities. The grid format appears somewhat problematic. Hence starting with the first example.</p>"},{"location":"reference/development/representations/representation-development/#2-test-in-the-rce","title":"2. Test in the RCE","text":"<p>Given the RCE only allows some HTML/CSS a manual test is required. As shown below <code>box-shadow</code> is not one of the allowed style properties, hence no nice drop shadow when shown in the RCE.</p> Rich Content Editor and no box-shadow <p></p>"},{"location":"reference/development/representations/representation-development/#3-add-the-skeleton-representation-component","title":"3. Add the skeleton representation component","text":"<p>With a basic design, time to add the representation. There are three steps.</p>"},{"location":"reference/development/representations/representation-development/#31-decide-on-a-name","title":"3.1 Decide on a name","text":"<p>In this case, we're going with HorizontalCards. </p>"},{"location":"reference/development/representations/representation-development/#32-create-an-initial-representation-file","title":"3.2 Create an initial representation file","text":"<p>Each representation is implemented by a single Svelte component stored in the src/components/Representations folder in the Collections source code.</p> <p>The simplest way to create the initial Svelte component for your representation is to copy and paste the CollectionsOnly.svelte file. CollectionsOnly implements the bare bones minimal for a representation. </p> <p>Be sure the filename of the copy matches your representation's name e.g. HorizontalCards.svelte</p>"},{"location":"reference/development/representations/representation-development/#33-update-the-new-representation-component","title":"3.3. Update the new representation component","text":"<p>You may wish to modify the copyright notice and other minor changes.</p> <p>There is also a commented out \"hello world\" heading. Uncommenting this can be a useful early indicator that your new representation is operational.</p>"},{"location":"reference/development/representations/representation-development/#33-register-the-representation","title":"3.3 \"Register\" the representation","text":"<p>For your new representation to be usable in Collections, it needs to be registered. This is done by editing the src/stores.ts file in the Collections repository. </p> <p>There are two changes to be made:</p> <ol> <li> <p>Import the newly created representation svelte file</p> <pre><code>import HorizontalCards from \"./components/Representations/HorizontalCards.svelte\n</code></pre> </li> <li> <p>Add an entry to the <code>representationStore</code> store</p> <pre><code>\"HorizontalCards\": HorizontalCards\n</code></pre> </li> </ol>"},{"location":"reference/development/representations/representation-development/#34-test-if-its-working","title":"3.4 Test if it's working","text":"<p>If you make the above changes and re-build your local version of Collections you should then be able to add a new </p> New representation (HorizontalCards) ready for use <p></p>"},{"location":"reference/development/representations/representation-development/#4-refine-it","title":"4. Refine it","text":"<p>And now the real work begins. Adding in the HTML from your design and replace hard-coded values with Svelte statements that Collections can use.</p>"},{"location":"reference/development/representations/representation-development/#41-add-your-existing-html","title":"4.1 Add your existing HTML","text":"<p>For HorizontalCards I copy and pasted the appropriate code from the design options into the new Svelte component just under the hello world. To test it, I modified one of the collections from my sample course to use the new representation. </p> <p>Tweak the HTML correctly and the following hard-coded HTML gets presented.</p> Early days for HorizontalCards <p></p>"},{"location":"reference/development/representations/representation-development/#42-add-the-module-loop","title":"4.2 Add the module loop","text":"<p>The remaining works involves modifying the Svelte component for your representation. Replacing hard-coded values with variables that make the representation work with any collection and its modules.</p> <p>First step is adding a loop around the single module representation. This is done using the Svelte <code>each</code> command and the array <code>modules</code> already created. <code>modules</code> is an array of objects. Each representing one of the modules for the current collection and providing access to all the available information about the module.</p> <p>For example, the following code generates three versions of the above figure. One for each of the three modules in the collection I'm using for testing.</p> <pre><code>{#each modules as theModule}\n&lt;div&gt;\n&lt;/div&gt;\n{/each}\n</code></pre>"},{"location":"reference/development/representations/representation-development/#43-replace-the-hard-coded-values","title":"4.3 Replace the hard-coded values","text":"<p>The next step is to replace the hard-coded values (e.g. for dates, module title etc) with information about the specific modules. There are two broad ways of doing this, using:</p> <ol> <li>variables; or,</li> <li>other Svelte components.</li> </ol> <p>Looking at other representation components (e.g. GriffithCards) may help.</p>"},{"location":"reference/development/representations/representation-development/#variables","title":"Variables","text":"<p>Collections maintains two data structures that provide access to Canvas and Collections information about each module.</p> <ol> <li><code>theModule</code> variable is \"Collections Canvas module\" object and provides some basic information from Canvas about a specific module. In particular, the module id.</li> <li> <p>The module id can be used to access the <code>$collectionStore</code> and the information Collections stores about each module. </p> <p>The \"Collections module object\" section of the data structures page provides more detail about the variables that are available.</p> </li> </ol> <p>The following table provides a mapping between the hard-coded values in the existing design of HorizontalCards and how to relevant Collections variables (or functions). Examine the GriffithCards (or other) representations to see examples.</p> <p>The task now is to replace the hard-coded values in the representation component with the appropriate Svelte variable statements. Once done, we get the figure below.</p> Value required Existing value Svelte variable Label and number \ud83e\udd14 Reason 1 <code>$collectionsStore[\"MODULES\"][theModule.id].label</code> and <code>$collectionsStore[\"MODULES\"][theModuleId].actualNum]</code> Module name Improve Canvas' organisation of course content <code>theModule.name</code> Module name (de-labeled) Improve Canvas' organisation of course content <code>deLabelModuleName( $collectionsStore[\"MODULES\"][theModule.id])}</code> Module description What are the limitations of Canvas' module view? How does Collections help? <code>$collectionsStore[\"MODULES\"][theModule.id].description</code> Link to Module http://canvas.docker/courses/1/modules#module_1 the <code>`getModuleUrl</code> function <p>A \"de-labeled\" module name will not include the module's label and number. Useful for improving the visual display.</p> Some variables for each module working <p></p>"},{"location":"reference/development/representations/representation-development/#other-svelte-components-and-complexities","title":"Other Svelte components and complexities","text":"<p>Some of the features used by representations are more complex than simple variables. The functions introduced above (<code>getModuleUrl</code> and <code>deLabelModuleName</code>) are simple examples. More complex examples include: use of other Svelte components; or more complex Svelte statements in the representation.</p> <p>The following table summarises the additional complexities required by <code>HorizontalCards</code> and one by an existing Collections feature (FYI modules). Due to its design it borrows heavily from the GriffithCards representation. With a different representation you may be creating your own components.</p> <p>Yep, it gets a bit complicated here. But we end up with the figure below.  </p> Value required Existing Value Additional complexity Module date A dual date from July 10 to 28 <code>DateWidget</code> component Banner (image) Batman/Robin meme image A group of three related banner components Engage button Button visible with <code>Engage</code> More complex conditional Svelte statements to show (or not) the button as configured FYI objects n/a If a module is an FYI object, display a message and don't link to it <p>The following figure demonstrates the following \"complications\" completed:</p> <ul> <li>When viewed by a teacher, any unpublished module is labelled unpublished (invisible to students).</li> <li>Banners can include images or iframes.</li> <li>If not date is configured, the date widget is empty.</li> <li>FYI cards get messages and no link to the module (for students an FYI module will normally be invisible/unpublished)</li> </ul> HorizontalCards showing off additional complications completed <p></p>"},{"location":"reference/development/representations/representation-development/#5-add-the-claytons-version","title":"5. Add the Claytons version","text":"<p>Representations are generally expected to support the Claytons mode of Collections. The ability to update a Canvas page with a static representation of one or more collections. A static representation that plays nicely with the Canvas RCE. Either by relying on external CSS or limiting itself to the HTML/CSS supported by the RCE.</p> <p>Supporting Claytons does require some additional work from people writing representations. In summary, the work involves creating another collection of HTML/Svelte commands grouped under a <code>{if claytons}</code> statement.</p> <p>Depending on the design of your representation you may not need a Claytons Version. A simple way to check is to </p> <ol> <li>Create a Claytons version using your representation.</li> <li>Ensure you turn off the Collections code and CSS (these provide some CSS and thus don't provide a good test.)</li> </ol> <p>The following demonstrates the current state of the Claytons version of HorizontalCards.  Visible problems appear to be</p> <ul> <li>The engage buttons placement is off.</li> <li>The FYI banner message has lost its styling.</li> <li> <p>The dates have no CSS applied.</p> <p>Due to the dates being implemented using the <code>DateWidget</code>. Which currently does not actively support Claytons. - The banners height is not consistent.</p> <p>This is due to the banner's relying on the <code>object-fit</code> CSS property, which is not supported by the RCE.</p> </li> </ul> <p>To address these is likely to require work on a distinctly different collection of HTML than the live representation. Hence the first step is often to...</p> Claytons version of HorizontalCards - no updates <p></p>"},{"location":"reference/development/representations/representation-development/#51-create-the-if-claytonselseif","title":"5.1 Create the <code>{if ! claytons}...{:else}...{/if}</code>","text":"<p>The boolean <code>claytons</code> variable is available in every representation. If true the user has requested a Claytons version. One way to provide this is to have a separate collection of HTML/Svelte specifically for Claytons.</p> <p>This can be started by creating the above Svelte if structure. If <code>claytons</code> is false then the live existing HTML/CSS is used. If it is true, then the newly developed claytons HTML/CSS is used.</p>"},{"location":"reference/development/representations/representation-development/#52-make-the-necessary-changes","title":"5.2 Make the necessary changes","text":"<p>The changes necessary for HorizontalCards includes</p> <ul> <li>Additional inline styling for the FYI card notice.</li> <li>Engage button placement left alone as no good, quick solution obvious.</li> <li>Update the date component to support Claytons</li> <li>Add a fixed height to each card</li> </ul> <p>Giving the figure below.</p> <p>Juice CSS Inline is helpful</p> <p>The main requirement for Claytons is generating inline CSS. The Juice CSS Inline tool has been helpful.</p> First draft of the HorizontalCards Claytons version <p></p>"},{"location":"reference/development/representations/representation-development/#6-test-it","title":"6. Test it","text":"<p>There are quite a few moving parts. First with the representation and Collections itself, but even more so with the wide variety of considerations for a representation (e.g. accessibility, responsive design etc.)</p>"},{"location":"reference/how-tos/failed-to-turn-editing-on/","title":"Failed to turn editing on","text":""},{"location":"reference/how-tos/failed-to-turn-editing-on/#symptom","title":"Symptom","text":"<p>When you try to turn editing on, you see something like the following image. The source of the error may vary, but the overall result is you can't modify Collections' configuration.</p> <p>By itself this doesn't indicate a problem - see below for more information</p> The \"Failed to turn editing on\" error <p></p>"},{"location":"reference/how-tos/failed-to-turn-editing-on/#explanation","title":"Explanation","text":"<p>As summarised on the edit life cycle page only one person in one browser can edit a Canvas course's Collections configuration.</p> <p>The error above indicates that someone else (perhaps you in another browser window) are currently editing this course's Collections configuration.</p> <p>Normally, if that person stops making changes to the course's Collections configuration their permission to edit will be removed. Allowing other people to edit.</p>"},{"location":"reference/how-tos/failed-to-turn-editing-on/#what-about-when-it-goes-wrong","title":"What about when it goes wrong?","text":"<p>There may be circumstances where this process does not work or you need to make changes as soon as possible. There are at least two ways to address this:</p> <ol> <li>Talk with your teaching team and ask them to stop editing.</li> <li>Force the removal of the editing lock.</li> </ol>"},{"location":"reference/how-tos/failed-to-turn-editing-on/#talk-with-your-teaching-team","title":"Talk with your teaching team","text":"<p>The only people who can edit a Canvas course's Collections configuration are those with teacher/designer roles for the course. You may well know these people and are able to communicate with them and ask them to stop editing.</p>"},{"location":"reference/how-tos/failed-to-turn-editing-on/#force-the-removal-of-the-editing-lock","title":"Force the removal of the editing lock","text":"<p>The Collections editing lock is implemented using an unpublished Canvas page titled Canvas Collections - editing. If you go to the course's pages view and sort by \"last edit\" you will likely see something like the following image. Where the Collections configuration page and its editing lock page are the most recently edited pages.</p> <p>Remove the Collections editing lock page to remove the editing lock</p> Examining the pages view for the Collections editing lock <p></p>"},{"location":"reference/lifecycle/module-configuration/","title":"Module Configuration","text":"GeneralDatesBannerMetadata <pre><code>The _General_ tab provides standard module configuration options. These include specifying the collection a module belongs to, its description, label etc.\n\n&lt;figure&gt;\n&lt;figcaption&gt;The general tab of the module configuration area&lt;/figcaption&gt;\n![](pics/generalTab.png)  \n&lt;/figure&gt;\n</code></pre> <p>Use the Dates tab to associate a date or date range with a module. e.g. specifying availability, a due date, or when an activity occurs. Dates are specified based on weeks of an academic calendar.</p> <p> The dates tab of the module configuration area </p> <p>A module can be configured - using the Banner tab - to have one of three types of banner (typically used by the Cards representation), including:</p> <ol> <li>image - any image with a URL can be used.</li> <li>iframe - a standard embed code (e.g. a YouTube video).</li> <li>colour - a colour can be specified.</li> </ol> <p> The banner tab of the module configuration area </p> <p>Each of the other tabs are used to configure metadata that is designed for some pre-defined purpose. The Metadata tab is used to manage generic metadata. Metadata that you may simply wish to store, or that may be used by a custom representation.</p> <p> The metadata tab of the module configuration area </p>"},{"location":"reference/lifecycle/navigating/","title":"Navigating Canvas Collections (live)","text":"<p>A teacher/designer can use the live Canvas Collections navigation interface to perform specific navigation tasks (explained below)</p> Labelled Collections teacher/designer navigation interface <p></p> Switch between collectionsReturn to the last collection you were looking atNavigate directly to a collectionNavigate to a moduleScroll to a module <p>Clicking on the collection name in the Navigation bar will switch to a collection.</p> <p> Switching between collections </p> <p>The first time you visit a Collections' page you will see the default collection.  But, Collections will remember the last collection you viewed. When you return to the Collections' page that collection will be active.</p> <p>Only for the same browser, on the same computer</p> <p>Collections' \"memory\" only works for the specific version of the browser you are using on the current computer.</p> <p> Returning to the last collection you were looking at </p> <p>Each collection has its unique URL. You can use that URL to navigate directly to a collection. </p> <p>For example, including that link in a Canvas page to take students to a specific collection.</p> <p> Direct navigation to a collection </p> <p>When a collection is using a representation, most representations will provide a method to link directly to a specific module within the display of current collection's Canvas modules. </p> <p> Direct navigation to a module </p> <p>Since all the modules allocated to the current collection are visible underneath the current collection's representation, you can simply scroll down the page to find any module allocated to the collection.</p> <p> Scrolling to a module </p>"},{"location":"reference/lifecycle/staff-view/","title":"Staff view of Canvas Collections","text":"<p>The teacher/designer experience of Collections depends on the type of Collections (i.e. Live or Claytons) and the mode when using live Collections (i.e. navigate or edit).</p> Claytons CollectionsLive Collections - navigate modeLive Collections - edit mode <p>Claytons Collections is static HTML representation of Collections saved to a Canvas page. The teacher/designer experience is the same as any other page. They can view, modify, and delete it. </p> <p>The image and table below provide an example and description of the Claytons Collections view for teachers/designers. The elements listed here are also visible in Live Collections and are explained in more detail the \"Live Collections - navigate mode\" tab. In Claytons, however, the elements are implemented using the limited HTML and CSS allowed by the Canvas Rich Content Editor (RCE).</p> <p>See the Navigating Claytons Collections page for more</p> Interface Element Description Navigation Bar Shows a list of all collections and allows navigation back and forth between collections. Include page (optional) <p>Each collection and have a single Include page. i.e. a Canvas page, the content of which will be inserted before or after the Current collection's representation.</p><p>Note: Only the current collection's include page is shown. Current collection's representation <p>Each collection chooses from one of the available representations. Representations are designed to provide a bespoke visualisation of the Canvas modules allocated to the current collection.</p> <p> </p> <p>Largely the same as the student experience navigating live Collections, but with slightly more permissions. The image is one representation of the teacher/designer experience of navigating live Collections. The labels are used in the table to describe the interface elements in more detail.</p> <p>For more on navigating Collections</p> <p>Navigating reference for details.</p> <p>Navigating Live Collections how-to for examples.</p> Interface Element Description Collections Element <p>Visible only to teachers/designers this element provides:</p><ol> <li> status information about the configuration of Collections for this course; and, </li><li> the ability to modify that configuration. </li> </ol><p>Note: the Edit On button in the Collections element. Indicating that this is navigation mode.</p> Navigation Bar Shows a list of all collections and allows navigation back and forth between collections. Include page (optional) <p>Each collection and have a single Include page. i.e. a Canvas page, the content of which will be inserted before or after the Current collection's representation.</p><p>Note: Only the current collection's include page is shown. Current collection's representation <p>Each collection chooses from one of the available representations. Representations are designed to provide a bespoke visualisation of the Canvas modules allocated to the current collection.</p> Current collections' modules The normal list of Canvas modules modified to just show those modules allocated to the current collection. <p> Labelled Collections teacher/designer navigation interface </p> <p>Click on the image to enlarge it</p> <p>Teachers/designers are able to turn Edit on to enter edit mode and thus configure Collections. In edit mode, the Collections interface is largely the same as the navigating interface. The two differences being</p> <ol> <li>The Collections element can be opened to start configuring collections.</li> <li>The Module config(uration) elements can be opened to start configuring modules.</li> </ol> <p>See the table on the 'Live Collections - navigate mode' tab for a description of the common interface elements</p> <p>For more on editing Collections</p> <p>Editing reference for details.</p> Interface Element Description (open) Collections element <p>Once open, the Collections element displays a list of all existing collections and provides functionality to add a new collection and modify/remove existing collections.</p><p>It's the primary element for configuring collections</p> Module Config(uration) <p>Each module allocated to the current collection will have its own module configuration element. When open, this element provides the ability to add and modify Collections metadata about a module.</p><p>It's the primary element for configuring modules <p> Labelled Collections teacher/designer edit interface </p> <p>Click on the image to enlarge it</p>"},{"location":"reference/lifecycle/student-view/","title":"Student View","text":"<p>Students experience with both live and Claytons Collections is almost the same as teachers/designers experience of navigating Collections. Any differences are summarised in the following table.</p> Collections Type Possible differences: student &amp; teacher/designer Live Collections Teachers/designers will see slightly more information due to increased permissions (e.g. unpublished modules, additional/different Collections messaging). Claytons Collections The only difference will be from normal Canvas practices. For example, if the Canvas page containing the Claytons representation is unpublished, students will not be able to view it. <p>For more detail and animated examples, see the:</p> <ul> <li>Navigating Live Collections page; and,</li> <li>Navigating Claytons Collections page.</li> </ul>"},{"location":"reference/lifecycle/course-copy/how-does-import-work/","title":"How does import work","text":"<p>Collections' configuration information stores the course identifier for its original course. When Collections is run it checks that the course id in its configuration matches the current course id.  If there isn't a match, Collections will launch its course copy/import process and</p> <ol> <li>Attempt to match the module information in its configuration with the module information in the new course.</li> <li>Check the image links in its configuration are from the new course.</li> <li>Display a dialog reporting what it found and asking whether you wish to <ol> <li>Proceed - Collections will update the configuration as reported.</li> <li>Cancel - Prevent Collections from doing anything and leave the Collections cofiguration as is to provide you an opportunity to perform some manual change.</li> <li>Refresh - Collections will remove all the previous Collections configuration information and create a fresh and empty Collections configuration ready for you to start afresh.</li> </ol> </li> </ol> Example Collections copy/import dialog <p></p>"},{"location":"reference/lifecycle/course-copy/how-does-import-work/#what-does-it-look-like","title":"What does it look like?","text":"<p>The Collections copy/import dialog consists of three tabs that provide you with information about the status of the copy/import, ready for your decision. The table below provides a description of the three tabs and the animated image below demonstrates one course copy process.</p> Tab Description Summary Provide an overview and explanation and offer the three choices of: proceed; cancel; and, refresh Modules Shows the results of Collections' attempts to match the imported modules (from Collections configuration) with the current modules in the desination course. Three possibilities are shown <ol> <li> Imported modules that matched current modules</li> <li> Imported modules that were not match </li> <li> Current modules that were not matched </li> </ol> Images A list of Collections' card images that are from another course's files area Example Collections copy/import process <p>"},{"location":"reference/lifecycle/course-copy/import/","title":"Import reference","text":"<p>Importing Collections typically happens after a course copy. Collections detects a Collections configuration file from another course. In response, Collections will display the \"import\" popup. The popup has three main sections explained below.</p>"},{"location":"reference/lifecycle/course-copy/import/#summary","title":"Summary","text":"<p>The summary tab of the import dialog provides a summary of the situation. It offers you a choice of how to proceed with the import.</p>"},{"location":"reference/lifecycle/course-copy/import/#how-to-proceed","title":"How to proceed?","text":""},{"location":"reference/lifecycle/course-copy/import/#proceed","title":"Proceed","text":"<p>If you choose Proceed, Collections will attempt to update the configuration as reported in the other tabs. Currently, the main change Collections will make is to update the module identifiers in the Collections configuration. </p> <p>Initially this identifiers will be for the modules in the original course. The course copy process will have created copies of these modules in the new course. These new modules will have different identifiers. Collections will update to the new identifiers.</p>"},{"location":"reference/lifecycle/course-copy/import/#cancel","title":"Cancel","text":"<p>If you choose Cancel, Collections will not make any changes to the Collections configuration. </p> <p>This allows you to make any necessary manual changes to the course of Collections configuration before you import Collections again at a later time.</p>"},{"location":"reference/lifecycle/course-copy/import/#refresh","title":"Refresh","text":"<p>If you choose Refresh, Collections will remove all the previous Collections configuration information and create a fresh and empty Collections configuration. It cleans the slate reday for you to start configuring Collections again (if you decide).</p> Summary tab of Collections import dialog <p></p>"},{"location":"reference/lifecycle/course-copy/import/#modules","title":"Modules","text":"<p>The modules tab summarises the outcomes of the checks on module identifiers Collections performed. These checks compared the names and identifiers of the modules in the Collections configuration file with the names and identifiers of the modules in the current course. It looks for three cases</p> <ol> <li> <p>Imported modules matched;</p> <p>The number of modules in the Collections configuration file that have names matching modules in the current course. </p> </li> <li> <p>Imported modules not matched; and,</p> <p>Any modules from the Collections configuration file with names not found in the current course. Perhaps indicating modules that were not copied from the original course.</p> </li> <li> <p>Current modules not matched.</p> <p>Any modules from the current course with names not matching any modules in the Collections configuration file. Suggesting modules that were not in the original course and thus not in the Collections configuration file.</p> </li> </ol> <p>The modules tab in the following figure indicates a clean course copy. All modules in the Collections configuration file were matched, and there are no other modules in the current course not in the Collections configuration file.</p> <p>Suggesting that Collections will be able to successfully import the Collections configuration file.</p> Modules tab of Collections import dialog <p></p>"},{"location":"reference/lifecycle/course-copy/import/#images","title":"Images","text":"<p>The images tab performs checks if any images used in Collections are hosted in a Canvas course site files area. In particular, it checks to see if there are any such images that are not based in the current course.</p> <p>Since Canvas automatically updates links to images (and other resources) within a course site's files area, there should normally not be any problem. As shown in the following image.</p> Images tab of Collections import dialog <p></p>"},{"location":"reference/lifecycle/course-copy/overview/","title":"Course Copy - Canvas Collections","text":""},{"location":"reference/lifecycle/course-copy/overview/#background-copying-a-canvas-course-with-collections","title":"Background - Copying a Canvas course with Collections","text":"<p>You can use the Canvas course copy process to copy course content from one site to another. </p> <p>Canvas Collections configuration information can be safely copied from one course to another. However, some changes need to be made. Collections will attempt to make these changes. This process is called importing Collections into the new course.</p>"},{"location":"reference/lifecycle/course-copy/overview/#considerations-when-importing","title":"Considerations when importing","text":"<p>Claytons Collections pages may need to be re-generated after a course copy</p> <p>After using Collections' course copy process, only live Collections will by automatically updated (because it is dynamically generated each time).</p> <p>Claytons Collections is not automatically updated by the Collections' course copy process. Claytons Collections generates static HTML pages and are not automatically updated. </p> <p>You will need to update any Claytons pages</p> <p>A clean copy will be a good copy</p> <p>A clean copy is where the destination course is \"clean\".</p> <p>i.e. it only contains information from the existing course. Nothing has already been added, modified, or removed.</p> <p>This makes it easy for Collections to update its configuration correctly.</p> <p>A clean copy will be a good copy.</p>"},{"location":"reference/lifecycle/course-copy/overview/#importing-collections-what-needs-to-happen-after-a-course-copy","title":"Importing Collections: what needs to happen after a course copy?","text":"<p>Collections' configuration information may contain information that needs to be updated to work with the new course. Collections will check and, in some cases, attempt to update this information, including:</p> <ul> <li>Module identifiers (ids) - the modules in the new course will have different module ids.</li> <li>Course image links - it is common to use images from a course's files area in Collections. A normal course copy process should result in these being modified. But Collections will check.</li> </ul>"},{"location":"reference/lifecycle/editing/collections/","title":"Configure Collections","text":"<p>With Edit on you can open the Collections element to configure both</p> <ul> <li> <p>Collections; and,</p> <p>Change the visibility of Collections or use the Claytons functionality.</p> </li> <li> <p>collections.</p> <p>Add a new collection, editing an existing collection, or update an output page for one collection.</p> </li> </ul> <p>The difference between _C_ollections and _c_ollections</p> <p>Collections (upper case C) refers to Canvas Collections. The entire tool and how it is applied to your course.</p> <p>collections (lower case c) are the individual groupings of modules you create and manage using Collections.</p> Collections elementTitle and version numberVisibilityExisting collectionsAdd a new collectionFull 'Claytons' <p>The Collections element is the main interface for configuring Collections (see image below). It contains a number of different sections that are described in more detail in the other tabs. By default, the Collections element is hidden. It is only visible with Edit on.</p> <p> Canvas Collections element </p> <p>In the top left hand corner of the Collections element is the title Configure Canvas Collections and the version number of the Collections you are currently using.</p> <p>Compare the version with the latest version page</p> <p> Canvas Collections title and version number </p> <p>The \"visibility\" menu allows you to change who can see live collections. There are four options.</p> Visibility option Description no-one No-one can see live collections. students Only students can see live collections. teachers Only teachers/designers can see live collections. all Everyone can see live collections. <p>See the live visibility page for more.</p> <p> Collections' visibility menu </p> <p>The \"existing collections\" section contains one section for each of the collections currently created for this course. Each collection's section provides a number of configuration options and functions to perform.</p> <p>See the Existing Collections page for more.</p> <p> A list of existing collections </p> <p>To add a new collection you provide the collection's name and choose a representation.</p> <p>See the Add a new collection page for more.</p> <p> Add a new collection </p> <p>The \"Full Claytons\" option provides the method to update Canvas pages with the representations of selected collections.</p> <p>See the Full Claytons page for more.</p> <p> Full Claytons </p>"},{"location":"reference/lifecycle/editing/editing/","title":"Editing Collections","text":"<p>Teachers/designers for a course are able to edit Collections to update the configuration to suit their design intent.</p> Pre-requisitesEdit life cycleConfigure CollectionsConfigure ModulesCreate Claytons Collections <p>Before you can edit Collections, you must</p> <ol> <li>Be able to see the Student View button on the course modules page.</li> <li>Successfully turn edit on. (see the edit life cycle)</li> </ol> <p>Only one person, in one browser window can edit Collections for a course</p> <p>To ensure that the Collections configuration information is not corrupted, only one person can edit the Collections configuration information for a course at a time.</p> <p>Also, this person can only edit the Collections configuration information in one browser window at a time.</p> <p>To modify Collections you will complete the edit life cycle: turn edit one; make changes; turn edit off. </p> <p>Only one person, in one browser window can edit Collections for a course</p> <p>To ensure that the Collections configuration information is not corrupted, only one person can edit the Collections configuration information for a course at a time.</p> <p>Also, this person can only edit the Collections configuration information in one browser window at a time.</p> <p>Your first step will normally be to Configure Collections, including tasks such as:</p> <ul> <li>Creating individual Collections;</li> <li>Managing the order of Collections;</li> <li>Changing the configuration of each Collection;</li> <li>Using \"Collections level\" functionality such as generating a Claytons Collection.</li> </ul> <p>Once you've configured Collections, you can then begin to Configure Modules to work with Collections, including tasks such as:</p> <ul> <li>Specifying which collection a module belongs to; and,</li> <li>Modifying the Collections' metadata associated with the module.</li> </ul> <p>If required and once you've configured Collections and Modules, you can then create any required Claytons Collections.</p>"},{"location":"reference/lifecycle/editing/lifecycle/","title":"The edit life cycle","text":"<p>To modify the configuration of Collections for a Canvas course you will need to turn Edit on. The life cycle that follows may involve each of the following steps.</p> <p>For more information on how to configure Collections once you've turned Edit on, see the Configure Collections and Configure Modules pages.</p> <p>Only one person, in one browser window can edit Collections for a course</p> <p>To ensure that the Collections configuration information is not corrupted, only one person in one browser window can edit the Collections configuration information for a course at a time.</p> Try to turn edit onSomeone else is editingYou are editingTurn edit offAutomatic edit off <p>Initially, when viewing the course Modules page you will be in view mode. In the top right hand corner, you should be able to see both the Collections element (circled in red in the figure below) and next to it the Student View button.</p> <p>To edit Collections, you click the Edit On button to turn Collections editing on.</p> <p> Staff view mode </p> <p>After clicking the Edit On button you will only be able to edit if no-one else (including you in another browser) are editing the same course's Collections configuration.</p> <p>If someone else is editing, you will see an alert (figure below) and will not be able to edit. As shown below, the alert will tell if it is you or someone else who is editing.</p> <p> Someone else (you) is editing </p> <p>Collections will update first</p> <p>The first step in turning edit on is to update the Collections configuration information to ensure you are editing the latest version. Meaning you may see a change in your Collections view as editing is turned on</p> <p>If no-one else is editing, you will be able to edit. The changes you see will include:</p> <ol> <li>the Edit On button will become the Edit Off button</li> <li>The Collections element (the first figure below) will include additional \"edit\" features (e.g. the Save button and the \"arrow\" icon to configure the collections)</li> <li>Each Canvas module will have a Collections' module configuration element (the second figure below)</li> </ol> <p> You are editing </p> <p>Clicking on the edit off button will turn editing off. Returning the Collections element to the view mode and removing the Collections' module configuration elements.</p> <p> Turning editing off <p>Collections will automatically turn edit off if you</p> <ol> <li>Leave the Modules page for which editing was turned on.</li> <li>You have not made any edits to Collections for a given time period (the default is 2 minutes).</li> </ol>"},{"location":"reference/lifecycle/editing/modules/","title":"Configure Modules","text":"<p>With Edit on each Canvas module should have a Collections' Module configuration element added just under the module's title. Use this to configure how the individual module is represented and used by Collections.</p> <p>Each Module configuration element consists of the same four tabs.</p> <p>Collections may not recognise recent changes in Canvas modules</p> <p>Collections doesn't immediately recognise changes made to Canvas modules. For example, if you've added a new module or changed the title or publish status of an existing module. </p> <p>Collections checks for these changes every 20 seconds or so. Until then, it will not recognise the changes.</p> <p>If you reload the modules page, Collections will recognise the changes. </p> <p>See the Objects (aka Activities) page for more on configuring modules into objects.</p> Module configuration elementGeneral tabDates tabBanner tabMetadata tab <p>The Module configuration element provides a number of common sections used to configure each module for Collections.</p> Section Description Header The header or title bar contains the title of the module. Clicking on the module header will open/collapse the module configuration element. If a module is not allocated to a collection it will include a No Collection Allocated badge Body The body of the config provides the four tabs used to configure the module. Tabs Allows you to navigate to each of the four tabs. Tab panels Provides the configuration interface for each individual tab. <p> Module configuration element </p> <p>The General tab is the default tab and provides the main configuration options for each module, including allocating a module to a collection and adding a description.</p> <p>See the General tab page for more.</p> <p> The general module configuration tab </p> <p>Each module can have a date period associated with it. The dates tab provides a way to specify this date period.</p> <p>See the Dates tab page for more.</p> <p> The dates module configuration tab </p> <p>Certain representations support the notion of a banner using an image, colour, or iframe. The banner tab provides a way to specify this banner.</p> <p>See the Banner tab page for more.</p> <p> The banner module configuration tab </p> <p>Certain representations make use of additional data about the module. For example the AssessmentTable representation uses learning outcomes. The metadata tab provides a way to provide a list of additional metadata (name and value).</p> <p>See the Metadata tab page for more.</p> <p> The metadata Module configuration tab </p>"},{"location":"reference/lifecycle/visibility/claytons/","title":"Visibility","text":"<p>Claytons Collections generates static Canvas pages containing representations of collections. Once the pages are created, viewing them does not use Canvas Collections. The visibility of Claytons Collections is dependent on the visibility of those Canvas pages. As per standard Canvas practice, unpublished pages are invisible to students</p>"},{"location":"reference/lifecycle/visibility/live/","title":"Visibility - Live Collections","text":"<p>Who is able to see and use Collections in its live form depends on two elements: 1. Whether Collections has been turned on for the course. 1. Whether the Collections Configuration page is published. 2. Collections' visibility setting; and,</p> <p>Warning</p> <p>Students can't use Collections if the configuration page is not published.</p> Off or onPublished or unpublishedVisibility settings <p>Collections is optional. It is not available by default. It must be turned on (and configured) by a teacher/designer before it can be used.</p> <p>If Collections is turned off, then students will see the vanilla Canvas modules view. Teachers/designers will see a limited Collections configuration element with an option to turn Collections on.</p> <p> Collections is turned off </p> <p>As per standard Canvas practice, unpublished pages are invisible to students. If the Canvas Collections Configuration page is unpublished, then students are unable to interact with Canvas Collections. </p> <p>This also applies to teacher/designer roles when using Student View.</p> <p>When you first turn on Collections, the configuration file is unpublished. You will need to publish it before students can use Collections. The Collections element will remind you if the configuration page is unpublished. You can click on the unpublished button to open the configuration page in a new browser tab and publish it.</p> <p> Collections when first turned on, with an unpublished configuration page </p> <p>Collections visibility setting control who is able to see the changes Collections makes to the Modules page. There are four settings.</p> Visibility setting Description none <p>No one can see the changes Collections makes to the Modules page.</p> <p>Teachers/designers are still able to see the Collections configuration element. They can also use that element to configure Collections</p> students <p>Students can see the changes Collections makes to the Modules page. Teachers/designers cannot see those changes.</p><p> Teachers/designers are still able to see the Collections configuration element and use it to configure Collections teachers <p>Students can not see Collections' changes.<p> <p>Teachers/designers can and they can use the Collections configuration element to configure Collections</p> <p> Default setting: When Collections is first turned on, visibility is set to teachers. all <p>Everyone can see Collections' changes.</p> <p>Teachers/designers can use the Collections configuration element to configure Collections</p> <p> Using Collection's Visibility settings </p>"},{"location":"reference/lifecycle/visibility/overview/","title":"Visibility","text":"<p>For whom Canvas Collections is visible depends on which of the two types of Collections being used.</p> Claytons Collections Live Collections <p>Creates and updates Canvas pages with representations generated by Collections. Visibility is based standard Canvas page visibility.</p> <p> Collections code dynamically modifies the Canvas Modules page. Visibility is based on the Collections visibility setting configured by the teachers/designers.</p>"},{"location":"reference/problems/failed-to-turn-editing-on/","title":"Failed to turn editing on","text":""},{"location":"reference/problems/failed-to-turn-editing-on/#symptom","title":"Symptom","text":"<p>When you try to turn editing on, you see something like the following image. The source of the error may vary, but the overall result is you can't modify Collections' configuration.</p> <p>By itself this doesn't indicate a problem - see below for more information</p> The \"Failed to turn editing on\" error <p></p>"},{"location":"reference/problems/failed-to-turn-editing-on/#explanation","title":"Explanation","text":"<p>As summarised on the edit life cycle page only one person in one browser can edit a Canvas course's Collections configuration.</p> <p>The error above indicates that someone else (perhaps you in another browser window) are currently editing this course's Collections configuration.</p> <p>Normally, if that person stops making changes to the course's Collections configuration their permission to edit will be removed. Allowing other people to edit.</p>"},{"location":"reference/problems/failed-to-turn-editing-on/#what-about-when-it-goes-wrong","title":"What about when it goes wrong?","text":"<p>There may be circumstances where this process does not work or you need to make changes as soon as possible. There are at least two ways to address this:</p> <ol> <li>Talk with your teaching team and ask them to stop editing.</li> <li>Force the removal of the editing lock.</li> </ol>"},{"location":"reference/problems/failed-to-turn-editing-on/#talk-with-your-teaching-team","title":"Talk with your teaching team","text":"<p>The only people who can edit a Canvas course's Collections configuration are those with teacher/designer roles for the course. You may well know these people and are able to communicate with them and ask them to stop editing.</p>"},{"location":"reference/problems/failed-to-turn-editing-on/#force-the-removal-of-the-editing-lock","title":"Force the removal of the editing lock","text":"<p>The Collections editing lock is implemented using an unpublished Canvas page titled Canvas Collections - editing. If you go to the course's pages view and sort by \"last edit\" you will likely see something like the following image. Where the Collections configuration page and its editing lock page are the most recently edited pages.</p> <p>Remove the Collections editing lock page to remove the editing lock</p> Examining the pages view for the Collections editing lock <p></p>"},{"location":"reference/problems/previously-deleted-configuration-page/","title":"Previously deleted configuration page","text":""},{"location":"reference/problems/previously-deleted-configuration-page/#previously-deleted-configuration-page","title":"Previously deleted configuration page","text":""},{"location":"reference/problems/previously-deleted-configuration-page/#symptom","title":"Symptom","text":"<p>When you try to turn Collections on for a course you see a dialog similar to the following image. In addition, you will be unable to turn Collections on.</p> The \"Previously deleted configuration page\" dialogue <p></p>"},{"location":"reference/problems/previously-deleted-configuration-page/#explanation","title":"Explanation","text":"<p>In September, 2013 Instructure introduced changes to how page titles and URLs operate. Quite useful changes in general, but problematic for Canvas Collections.</p> <p>These changes means that even when you delete a Canvas page, Canvas will remember that it existed. </p> <p>For example, the very first time you create a page titled \"Canvas Collections Configuration\", it will have the URL https:///courses//pages/canvas-collections-configuration. If you delete that page and create a new page with the same title, the URL will be https:///courses//pages/canvas-collections-configuration-2. <p>Collections can only work with the original</p> <p>Collections can only work with a configuration page with the page URL .../pages/canvas-collections-configuration.</p> <p>Very likely to occur when re-using course sites</p> <p>Reusing Canvas course sites (e.g. a sandbox course site you use for testing) by deleting content and copying over new content will almost certainly experience this problem.</p>"},{"location":"reference/problems/previously-deleted-configuration-page/#possible-solution","title":"(Possible) Solution","text":"<p>The solution to this problem has two steps </p> <ol> <li>Undelete the original Canvas Collections Configuration page.</li> <li>Update the restored configuration page.</li> </ol> <p>This is not a foolproof solution</p> <p>This solution relies enter Canvas' undelete feature. Sadly this feature is somewhat limited and apparently not fully supported. It only allows restoration of recently deleted items. </p> <p>The Collections configuration page may not be available for restoration.</p> <p>Currently, there is no known solution to this problem. Meaning you cannot use Canvas Collections in this course site.</p>"},{"location":"reference/problems/previously-deleted-configuration-page/#undelete-the-original","title":"Undelete the original","text":"<p>Use Canvas' recover deleted course content functionality to undelete the original Collections configuration page. </p> <p>You do this by </p> <ol> <li>Go to the home page of your course.</li> <li>Add <code>/undelete</code> to the end of the URL and hit enter.</li> <li> <p>Look for a page (labeled WikiPage) title Canvas Collections Configuration.</p> <p>There is a chance you might see more than one page with this title (see figure below). You should restore the page that was created first. 4. Click the Restore button next to the page you want to restore.</p> </li> </ol> <p>The following figure shows a small part of a course site's Canvas \"undelete\" page. </p> Multiple Collections configuration pages to be restored <p></p>"},{"location":"reference/problems/previously-deleted-configuration-page/#update-the-restored-configuration-page","title":"Update the restored configuration page","text":"<p>The restored Collections configuration page may not match the current course site content. For example, the following figure shows a restored Collections configuration page that does not match the current course site content. An obvious error is the missing include page warning. Less obvious is the four collections (What?, Why?, How?, and Questions &amp; Suggestions) that do not match the current course site.</p> <p>To fix this you will need to use the Collections configuration process to modify the Collections to suit the new course content.</p> Example of a restored Collections configuration mismatch <p></p>"}]}